import get from "get-object-value";
var keys = Object.keys;

var combine = function combine(arr, objKey) {
  var nextArr = objKey ? {} : [];
  var thisArr = get(arr, null, {});
  var thisKeys = keys(thisArr);

  if (!thisArr[thisKeys[0]] || !thisArr[thisKeys[0]].forEach) {
    console.warn("Not array.", {
      thisArr,
      thisKeys
    }, thisKeys[0]);
    return;
  }

  thisArr[thisKeys[0]].forEach(function (val, key) {
    var next = {};
    var thisObjKey = key;
    thisKeys.forEach(function (k) {
      next[k] = get(thisArr, [k, key]);

      if (objKey && objKey === k) {
        thisObjKey = next[k];
      }
    });

    if (!objKey) {
      nextArr.push(next);
    } else {
      nextArr[thisObjKey] = next;
    }
  });
  return nextArr;
};

var getAllCombine = function getAllCombine(arr) {
  var arrKeys = keys(arr);
  var results = {};
  arrKeys.forEach(function (key) {
    results[key] = combine(arr, key);
  });
  return results;
};

var combineSub = function combineSub(arr, subArr, key, subObjKey) {
  arr.forEach(function (a) {
    var thisSub = get(subArr, [a[key]]);
    a[key] = thisSub ? combine(thisSub, subObjKey) : null;
  });
  return arr;
};

export default combine;
export { combineSub, getAllCombine };