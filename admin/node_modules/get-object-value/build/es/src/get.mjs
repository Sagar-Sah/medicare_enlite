//@ts-check
import { UNDEFINED, IS_ARRAY, T_UNDEFINED } from "reshow-constant";
import callfunc from "call-func";
import getDefaultValue from "./getDefaultValue.mjs";
/**
 * @see https://github.com/react-atomic/reshow/issues/123
 * @param {object} o
 * @param {string|number} k
 * @returns {any}
 */

var getter = function getter(o, k) {
  var _ref;

  return (_ref = o.size && callfunc(o.get, [k], o)) !== null && _ref !== void 0 ? _ref : o[k];
};
/**
 * @param {any} o
 * @param {(string | number)[]} path 
 * @param {any} defaultValue
 * @returns {any}
 */


var get = function get(o, path, defaultValue) {
  if (path === void 0) {
    path = [];
  }

  if (defaultValue === void 0) {
    defaultValue = T_UNDEFINED;
  }

  if (null == o) {
    return getDefaultValue(defaultValue, o);
  }

  var current = o;

  if (!path || !IS_ARRAY(path) || !path.length) {
    return current;
  }

  try {
    var i = path.length;
    var j = path.length - 1;

    while (i--) {
      var index = path[j - i];

      if (null != current) {
        var next = getter(current, index);

        if (UNDEFINED !== typeof next) {
          current = next;
        } else {
          current = getDefaultValue(defaultValue, next);
          break;
        }
      } else {
        current = getDefaultValue(defaultValue);
        break;
      }
    }
  } catch (e) {
    console.warn({
      e
    });
    current = getDefaultValue(defaultValue);
  }

  return current;
};

export default get;