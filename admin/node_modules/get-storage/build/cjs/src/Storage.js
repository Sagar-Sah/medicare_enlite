"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.parseField = exports.encode = exports["default"] = exports.decode = void 0;

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _getObjectValue = require("get-object-value");

var _reshowConstant = require("reshow-constant");

var toInt = function toInt(d) {
  return parseInt(d, 10);
};

var parseField = function parseField(s) {
  var iStar = s.indexOf(",");
  var len = toInt(s.substring(0, iStar));
  var val = s.substring(iStar + 1);
  return [len, val];
};

exports.parseField = parseField;

var encode = function encode(s) {
  var _v = JSON.stringify((0, _getObjectValue.toJS)(s));

  var vLen = _v.length;
  var result = vLen + "," + _v;
  return result;
};

exports.encode = encode;

var decode = function decode(s) {
  var _parseField = parseField(s),
      vLen = _parseField[0],
      value = _parseField[1];

  return vLen === value.length ? JSON.parse(value) : null;
};

exports.decode = decode;

var Storage = /*#__PURE__*/function () {
  function Storage(_storage, _disableEncode) {
    (0, _classCallCheck2["default"])(this, Storage);
    this._storage = _storage;
    this._de = _disableEncode;
  }

  (0, _createClass2["default"])(Storage, [{
    key: "set",
    value: function set(k, v) {
      var origV = this.get(k);

      if (v !== origV) {
        var s = this._de ? v : encode(v);

        this._storage(k)(s);

        return new Storage(this._storage, this._de);
      } else {
        return this;
      }
    }
  }, {
    key: "merge",
    value: function merge(arr) {
      var _this = this;

      if (!arr || _reshowConstant.OBJECT !== typeof arr) {
        return this;
      }

      var pKeys = (0, _reshowConstant.KEYS)(arr);

      if (!pKeys || !pKeys.length) {
        return this;
      }

      var nextObj;
      pKeys.forEach(function (key) {
        return nextObj = _this.set(key, arr[key]);
      });
      return nextObj;
    }
  }, {
    key: "get",
    value: function get(k) {
      var s = this._storage(k)();

      if (!s) {
        return;
      }

      return this._de ? s : decode(s);
    }
  }]);
  return Storage;
}();

var _default = Storage;
exports["default"] = _default;