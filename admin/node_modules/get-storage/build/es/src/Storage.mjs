import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import { toJS } from "get-object-value";
import { OBJECT, KEYS } from "reshow-constant";

var toInt = function toInt(d) {
  return parseInt(d, 10);
};

var parseField = function parseField(s) {
  var iStar = s.indexOf(",");
  var len = toInt(s.substring(0, iStar));
  var val = s.substring(iStar + 1);
  return [len, val];
};

var encode = function encode(s) {
  var _v = JSON.stringify(toJS(s));

  var vLen = _v.length;
  var result = vLen + "," + _v;
  return result;
};

var decode = function decode(s) {
  var _parseField = parseField(s),
      vLen = _parseField[0],
      value = _parseField[1];

  return vLen === value.length ? JSON.parse(value) : null;
};

var Storage = /*#__PURE__*/function () {
  function Storage(_storage, _disableEncode) {
    _classCallCheck(this, Storage);

    this._storage = _storage;
    this._de = _disableEncode;
  }

  _createClass(Storage, [{
    key: "set",
    value: function set(k, v) {
      var origV = this.get(k);

      if (v !== origV) {
        var s = this._de ? v : encode(v);

        this._storage(k)(s);

        return new Storage(this._storage, this._de);
      } else {
        return this;
      }
    }
  }, {
    key: "merge",
    value: function merge(arr) {
      var _this = this;

      if (!arr || OBJECT !== typeof arr) {
        return this;
      }

      var pKeys = KEYS(arr);

      if (!pKeys || !pKeys.length) {
        return this;
      }

      var nextObj;
      pKeys.forEach(function (key) {
        return nextObj = _this.set(key, arr[key]);
      });
      return nextObj;
    }
  }, {
    key: "get",
    value: function get(k) {
      var s = this._storage(k)();

      if (!s) {
        return;
      }

      return this._de ? s : decode(s);
    }
  }]);

  return Storage;
}();

export default Storage;
export { parseField, encode, decode };