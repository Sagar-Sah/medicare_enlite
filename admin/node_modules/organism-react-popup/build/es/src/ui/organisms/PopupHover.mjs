import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _assertThisInitialized from "reshow-runtime/es/helpers/assertThisInitialized";
import _inherits from "reshow-runtime/es/helpers/inherits";
import _createSuper from "reshow-runtime/es/helpers/createSuper";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
var _excluded = ["children", "popup", "isKeep", "toPool", "alignParams", "component", "name"];
import React, { PureComponent } from "react";
import { build, SemanticUI } from "react-atomic-molecule";
import { getTimestamp } from "get-random-id";
import callfunc from "call-func";
import PopupFloatEl from "../molecules/PopupFloatEl.mjs";
import DisplayPopupEl from "../organisms/DisplayPopupEl.mjs";
import { popupDispatch } from "../../stores/popupStore.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
var closeTimer = {};

var PopupHover = /*#__PURE__*/function (_PureComponent) {
  _inherits(PopupHover, _PureComponent);

  var _super = _createSuper(PopupHover);

  function PopupHover() {
    var _this;

    _classCallCheck(this, PopupHover);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "floatMouseOver", function () {
      _this.isKeep = true;
    });

    _defineProperty(_assertThisInitialized(_this), "floatMouseOut", function () {
      _this.isKeep = false;

      _this.close();
    });

    _defineProperty(_assertThisInitialized(_this), "mouseOver", function () {
      var {
        name
      } = _this.props;
      clearTimeout(closeTimer[name]);

      _this.open();
    });

    _defineProperty(_assertThisInitialized(_this), "mouseOut", function () {
      var {
        name
      } = _this.props;
      clearTimeout(closeTimer[name]);
      closeTimer[name] = setTimeout(function () {
        _this.close();
      }, 100);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDom", function (dom) {
      return _this.dom = dom;
    });

    return _this;
  }

  _createClass(PopupHover, [{
    key: "open",
    value: function open() {
      var {
        callback
      } = this.props;
      this.setState({
        show: true,
        bust: getTimestamp()
      }, function () {
        callfunc(callback);
      });
    }
  }, {
    key: "close",
    value: function close() {
      var {
        isKeep,
        onClose
      } = this.props;

      if (this.isKeep || isKeep) {
        return;
      }

      this.setState({
        show: false
      }, function () {
        callfunc(onClose);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          {
        children,
        popup,
        isKeep,
        toPool,
        alignParams,
        component,
        name
      } = _this$props,
          others = _objectWithoutProperties(_this$props, _excluded);

      var {
        show,
        bust
      } = this.state || {};
      var popupEl = null;

      if (show) {
        popupEl = /*#__PURE__*/_jsx(DisplayPopupEl, {
          bust: bust,
          children: /*#__PURE__*/_jsx(PopupFloatEl, {
            targetEl: this.dom,
            toPool: toPool,
            name: name,
            alignParams: alignParams,
            onMouseEnter: this.floatMouseOver,
            onMouseLeave: this.floatMouseOut,
            children: popup
          })
        }, "popup-el");
      }

      var thisChildren = [children, popupEl];
      return build(component)(_objectSpread({
        refCb: this.handleDom,
        onMouseEnter: this.mouseOver,
        onMouseLeave: this.mouseOut,
        name
      }, others), thisChildren);
    }
  }]);

  return PopupHover;
}(PureComponent);

_defineProperty(PopupHover, "defaultProps", {
  name: "popup-hover",
  component: SemanticUI
});

export default PopupHover;