"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutPropertiesLoose"));

var _classLib = require("class-lib");

var _reshowBuild = _interopRequireDefault(require("reshow-build"));

var _SemanticUI = _interopRequireDefault(require("../molecules/SemanticUI.js"));

var _Button = _interopRequireDefault(require("../molecules/Button.js"));

var _Label = _interopRequireDefault(require("../molecules/Label.js"));

var _Icon = _interopRequireDefault(require("../molecules/Icon.js"));

var _useCSS = _interopRequireDefault(require("../../useCSS.js"));

var _useLazyInject = _interopRequireDefault(require("../../lib/styles/useLazyInject.js"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["atom", "actionProps", "inputComponent", "button", "icon", "children", "messageType", "leftLabel", "leftLabelProps", "rightLabel", "rightLabelProps", "transparent", "wrapStyle", "wrapClassName"];

var InputBox = function InputBox(props) {
  injects = (0, _useLazyInject["default"])(InjectStyles, injects);
  (0, _useCSS["default"])(["input", "search", "form"], "semantic");
  var _props$atom = props.atom,
      atom = _props$atom === void 0 ? "input" : _props$atom,
      _props$actionProps = props.actionProps,
      actionProps = _props$actionProps === void 0 ? {} : _props$actionProps,
      _props$inputComponent = props.inputComponent,
      inputComponent = _props$inputComponent === void 0 ? _SemanticUI["default"] : _props$inputComponent,
      button = props.button,
      icon = props.icon,
      children = props.children,
      messageType = props.messageType,
      leftLabel = props.leftLabel,
      leftLabelProps = props.leftLabelProps,
      rightLabel = props.rightLabel,
      rightLabelProps = props.rightLabelProps,
      transparent = props.transparent,
      wrapStyle = props.wrapStyle,
      wrapClassName = props.wrapClassName,
      others = (0, _objectWithoutPropertiesLoose2["default"])(props, _excluded);
  var classes = (0, _classLib.mixClass)(wrapClassName, messageType, "input", {
    labeled: leftLabel || rightLabel,
    right: rightLabel,
    action: button && !icon,
    icon: icon,
    transparent: transparent
  });
  var thisLeftLabel;

  if (leftLabel) {
    thisLeftLabel = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Label["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, leftLabelProps), {}, {
      children: leftLabel
    }));
  }

  var thisRightLabel;

  if (rightLabel) {
    thisRightLabel = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Label["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      style: Styles.rightLabel,
      className: "basic"
    }, rightLabelProps), {}, {
      children: rightLabel
    }));
  }

  var thisButton = null;

  if (button) {
    thisButton = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, actionProps), {}, {
      children: button
    }));
  } else if (icon) {
    thisButton = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, actionProps), {}, {
      style: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, Styles.icon), actionProps.style),
      children: icon
    }));
  }

  var thisChildren;
  var inputChildren;

  if ("select" === atom) {
    inputChildren = children;
    thisChildren = null;
  } else {
    thisChildren = children;
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_SemanticUI["default"], {
    className: classes,
    style: wrapStyle,
    children: [thisLeftLabel, (0, _reshowBuild["default"])(inputComponent)((0, _objectSpread2["default"])({
      atom: atom,
      ui: false
    }, others), inputChildren), thisRightLabel, thisChildren, thisButton]
  });
};

var _default = InputBox;
exports["default"] = _default;
var Styles = {
  rightLabel: {
    borderRadius: 0
  },
  icon: {
    position: "absolute",
    top: 0,
    right: 0,
    opacity: 0.5
  }
};
var injects;
var InjectStyles = {
  label: [{
    background: "transparent",
    color: "inherit"
  }, ".ui.transparent.inverted.input>.label"]
};
module.exports = exports.default;