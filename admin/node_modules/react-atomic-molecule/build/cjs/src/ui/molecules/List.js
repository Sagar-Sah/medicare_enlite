"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutPropertiesLoose"));

var _react = require("react");

var _classLib = require("class-lib");

var _SemanticUI = _interopRequireDefault(require("../molecules/SemanticUI.js"));

var _useCSS = _interopRequireDefault(require("../../useCSS.js"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["type", "className", "children", "horizontal"];

var renderChildren = function renderChildren(children, pAtom, horizontal) {
  return _react.Children.map(children, function (child) {
    if (!child) {
      return null;
    }

    if ("ul" === pAtom || "ol" === pAtom) {
      child = /*#__PURE__*/(0, _react.cloneElement)(child, {
        atom: "li"
      });
    } else if ("table" === pAtom) {
      child = /*#__PURE__*/(0, _react.cloneElement)(child, {
        atom: "td"
      });

      if (!horizontal) {
        child = /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
          children: child
        });
      }
    }

    return child;
  });
};

var List = function List(props) {
  (0, _useCSS["default"])(["list"], "semantic");
  /**
   * Why need type?
   *
   * List not the only type, such as segments.
   * https://semantic-ui.com/elements/segment.html#raised-segments
   *
   */

  var _props$type = props.type,
      type = _props$type === void 0 ? "list" : _props$type,
      className = props.className,
      children = props.children,
      horizontal = props.horizontal,
      others = (0, _objectWithoutPropertiesLoose2["default"])(props, _excluded);
  var atom = props.atom;
  var classes = (0, _classLib.mixClass)(className, type, {
    horizontal: horizontal
  });
  var child = renderChildren(children, atom, horizontal);

  if (atom === "table") {
    if (child) {
      if (horizontal) {
        child = /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: child
          })
        });
      } else {
        child = /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: child
        });
      }
    }
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_SemanticUI["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, others), {}, {
    className: classes,
    children: child
  }));
};

var _default = List;
exports["default"] = _default;
module.exports = exports.default;