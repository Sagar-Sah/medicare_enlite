import _asyncToGenerator from "reshow-runtime/es/helpers/asyncToGenerator";
import React from "react";
import { expect } from "chai";
import { render, cleanIt, waitFor } from "reshow-unit";
import useLazyInject from "../useLazyInject.mjs";
import styleStore from "../store.mjs";
import SemanticUI from "../../../ui/molecules/SemanticUI.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("Test useLazyInject", function () {
  beforeEach(function () {
    cleanIt();
    styleStore.counter = 0;
    styleStore.newStyles = [];
  });
  var injects;
  var InjectStyles = {
    test: [{
      padding: 1
    }]
  };
  it("test useLazyInject", /*#__PURE__*/_asyncToGenerator(function* () {
    var VDom = function VDom(props) {
      injects = useLazyInject(InjectStyles, injects);
      return /*#__PURE__*/_jsx(SemanticUI, {
        styles: injects.test
      });
    };

    var wrapper = render( /*#__PURE__*/_jsx(VDom, {}));
    expect(wrapper.html()).to.equal("<div class=\"c1_ ui\"></div>");
    yield waitFor(function () {
      expect(document.getElementsByTagName("style")[0].innerHTML).to.have.string("padding: 1px");
    });
  }));
});