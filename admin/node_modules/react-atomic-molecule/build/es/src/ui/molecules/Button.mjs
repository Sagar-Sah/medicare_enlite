import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["type", "className", "children", "icon", "style"];
import { useEffect } from "react";
import { mixClass } from "class-lib";
import SemanticUI from "../molecules/SemanticUI.mjs";
import Icon from "../molecules/Icon.mjs";
import useCSS from "../../useCSS.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Button = function Button(props) {
  useCSS(["button", "loader"], "semantic");

  var {
    type = "button",
    className,
    children,
    icon,
    style
  } = props,
      others = _objectWithoutProperties(props, _excluded);

  var classes = mixClass(className, "button");
  var thisIcon;
  var buttonWithIconStyle;

  if (icon) {
    thisIcon = /*#__PURE__*/_jsx(Icon, {
      style: Styles.icon,
      children: icon
    });
    buttonWithIconStyle = Styles.buttonWithIcon;
  }

  return /*#__PURE__*/_jsxs(SemanticUI, _objectSpread(_objectSpread({
    atom: "button",
    type: type
  }, others), {}, {
    className: classes,
    style: _objectSpread(_objectSpread({}, buttonWithIconStyle), style),
    children: [thisIcon, children]
  }));
};

export default Button;
var Styles = {
  icon: {
    left: 20,
    top: 7,
    fill: "#fff",
    position: "absolute"
  },
  buttonWithIcon: {
    position: "relative",
    paddingLeft: 44
  }
};