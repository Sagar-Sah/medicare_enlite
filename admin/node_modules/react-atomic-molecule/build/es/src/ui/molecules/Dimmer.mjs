import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["show", "isModal", "center", "content", "className", "children", "contentStyle"];
import { mixClass } from "class-lib";
import Content from "../molecules/Content.mjs";
import SemanticUI from "../molecules/SemanticUI.mjs";
import useCSS from "../../useCSS.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var Dimmer = function Dimmer(props) {
  useCSS(["dimmer"], "semantic");

  var {
    show = false,
    isModal = false,

    /**
     *  "center' and "content" are the same,  just let user not confuse.
     *  So if you set any of it to false, will not show content.
     */
    center = true,
    content = true,
    className,
    children,
    contentStyle
  } = props,
      others = _objectWithoutProperties(props, _excluded);

  if (!show) {
    return null;
  }

  var classes = mixClass(className, "transition visible active", {
    dimmer: !isModal,
    modal: isModal
  });
  var child;

  if (center && content) {
    child = /*#__PURE__*/_jsx(Content, {
      style: _objectSpread({
        boxSizing: "inherit"
      }, contentStyle),
      children: children
    });
  } else {
    child = children;
  }

  return /*#__PURE__*/_jsx(SemanticUI, _objectSpread(_objectSpread({}, others), {}, {
    className: classes,
    children: child
  }));
};

export default Dimmer;