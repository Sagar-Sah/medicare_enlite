import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["label", "labelProps", "barLabel", "barLabelProps", "barProps", "children", "className", "percent", "style", "styles"],
    _excluded2 = ["style", "styles"];
import { mixClass } from "class-lib";
import SemanticUI from "../molecules/SemanticUI.mjs";
import Label from "../molecules/Label.mjs";
import reactStyle from "../../lib/styles/index.mjs";
import useCSS from "../../useCSS.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Progress = function Progress(props) {
  useCSS(["progress"], "semantic");

  var {
    label,
    labelProps,
    barLabel,
    barLabelProps,
    barProps,
    children,
    className,
    percent,
    style,
    styles
  } = props,
      others = _objectWithoutProperties(props, _excluded);

  var thisLabel = label ? /*#__PURE__*/_jsx(Label, _objectSpread(_objectSpread({
    ui: false
  }, labelProps), {}, {
    children: label
  })) : children;

  var _ref = barProps || {},
      {
    style: barStyle,
    styles: barStyles
  } = _ref,
      otherBarProps = _objectWithoutProperties(_ref, _excluded2);

  var classes = mixClass(className, "progress");
  otherBarProps.children = barLabel ? /*#__PURE__*/_jsx(SemanticUI, _objectSpread(_objectSpread({
    className: "progress",
    ui: false
  }, barLabelProps), {}, {
    children: barLabel
  })) : otherBarProps.children;
  var thisPercent = (percent !== null && percent !== void 0 ? percent : props["data-percent"]) * 1;
  return /*#__PURE__*/_jsxs(SemanticUI, _objectSpread(_objectSpread({}, others), {}, {
    className: classes,
    "data-percent": thisPercent,
    styles: [reactStyle(style, null, false), styles],
    children: [/*#__PURE__*/_jsx(SemanticUI, _objectSpread(_objectSpread({
      className: "bar",
      ui: false
    }, otherBarProps), {}, {
      styles: [reactStyle(_objectSpread({
        width: thisPercent + "%"
      }, barStyle), null, false), barStyles]
    })), thisLabel]
  }));
};

export default Progress;