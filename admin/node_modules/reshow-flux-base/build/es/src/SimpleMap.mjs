import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
// @ts-check
import { toJS } from "get-object-value";
import { OBJECT } from "reshow-constant";
var SimpleMap = /*#__PURE__*/function () {
  /**
   * @param {object} obj
   * @param {boolean} needUpdate
   */
  function SimpleMap(obj, needUpdate) {
    if (needUpdate === void 0) {
      needUpdate = false;
    }
    _classCallCheck(this, SimpleMap);
    _defineProperty(this, "_state", {});
    _defineProperty(this, "_update", false);
    if (obj) {
      this._state = obj;
    }
    if (needUpdate) {
      this._update = needUpdate;
    }
  }

  /**
   * @param {object} obj
   * @returns {SimpleMap}
   */
  _createClass(SimpleMap, [{
    key: "renew",
    value: function renew(obj) {
      if (this._update) {
        this._state = obj;
      }
      return new SimpleMap(obj);
    }

    /**
     * @param {string} k
     * @returns {any}
     */
  }, {
    key: "get",
    value: function get(k) {
      return OBJECT === typeof this._state[k] && null !== this._state[k] ? new SimpleMap(this._state[k]) : this._state[k];
    }

    /**
     * @param {string} k
     * @param {any} v
     * @returns {SimpleMap}
     */
  }, {
    key: "set",
    value: function set(k, v) {
      var state = _objectSpread(_objectSpread({}, this._state), {}, {
        [k]: toJS(v)
      });
      return this.renew(state);
    }

    /**
     * @param {string} k
     * @returns {SimpleMap}
     */
  }, {
    key: "delete",
    value: function _delete(k) {
      var state = _objectSpread({}, this._state);
      delete state[k];
      return this.renew(state);
    }

    /**
     * @param {object|SimpleMap} arr
     * @returns {SimpleMap}
     */
  }, {
    key: "merge",
    value: function merge(arr) {
      var state = _objectSpread(_objectSpread({}, this._state), toJS(arr));
      return this.renew(state);
    }

    /**
     * @returns {object}
     */
  }, {
    key: "toJS",
    value: function toJS() {
      return this._state;
    }
  }]);
  return SimpleMap;
}();
export default SimpleMap;