import { expect } from "chai";
import SimpleMap from "../SimpleMap.mjs";
describe("Test SimpleMap", function () {
  it("test init object", function () {
    var oMap = new SimpleMap({
      foo: "bar"
    });
    expect(oMap.toJS()).to.deep.equal({
      foo: "bar"
    });
  });
  it("test get single value", function () {
    var oMap = new SimpleMap({
      foo: "bar"
    });
    expect(oMap.get("foo")).to.equal("bar");
  });
  it("test get map", function () {
    var oMap = new SimpleMap({
      foo: {
        aaa: "bbb"
      }
    });
    expect(oMap.get("foo").toJS()).to.deep.equal({
      aaa: "bbb"
    });
  });
  it("test set", function () {
    var oMap = new SimpleMap({
      foo: {
        aaa: "bbb"
      }
    });
    expect(oMap.set("foo", {
      ccc: "ddd"
    }).toJS()).to.deep.equal({
      foo: {
        ccc: "ddd"
      }
    });
  });
  it("test set with map", function () {
    var oMap = new SimpleMap({
      foo: {
        aaa: "bbb"
      }
    });
    expect(oMap.set("foo", new SimpleMap({
      eee: "fff"
    })).toJS()).to.deep.equal({
      foo: {
        eee: "fff"
      }
    });
  });
  it("test delete", function () {
    var oMap = new SimpleMap({
      a: "b",
      c: "d",
      e: "f"
    });
    expect(oMap.delete("c").toJS()).to.deep.equal({
      a: "b",
      e: "f"
    });
  });
  it("test merge", function () {
    var oMap = new SimpleMap({
      foo: "bar"
    });
    expect(oMap.merge({
      bar: "foo"
    }).toJS()).to.deep.equal({
      foo: "bar",
      bar: "foo"
    });
  });
});