import _asyncToGenerator from "reshow-runtime/es/helpers/asyncToGenerator";
import { expect } from "chai";
import { render, sleep, getSinon as sinon } from "reshow-unit";
import useDebounce from "../useDebounce.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("test useDebounce", function () {
  it("basic test", /*#__PURE__*/_asyncToGenerator(function* () {
    var spy = sinon().spy();

    var Comp = function Comp(props) {
      var run = useDebounce(spy, 0);

      for (var i = 0; i < 5; i++) {
        run();
      }

      return null;
    };

    render( /*#__PURE__*/_jsx(Comp, {}));
    yield sleep(function () {
      expect(spy.called).to.be.true;
      expect(spy.callCount <= 2).to.be.true;
    }, 10);
  }));
});