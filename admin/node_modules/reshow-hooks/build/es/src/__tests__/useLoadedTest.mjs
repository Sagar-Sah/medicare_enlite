import _asyncToGenerator from "reshow-runtime/es/helpers/asyncToGenerator";
import { expect } from "chai";
import { render, cleanIt, waitFor, getSinon } from "reshow-unit";
import useLoaded from "../useLoaded.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("test useLoaded", function () {
  afterEach(function () {
    cleanIt();
  });
  it("basic test", /*#__PURE__*/_asyncToGenerator(function* () {
    var spy = getSinon().spy();

    var Comp = function Comp() {
      var hello = useLoaded(spy);
      return /*#__PURE__*/_jsx("div", {
        children: hello ? "hello" : null
      });
    };

    render( /*#__PURE__*/_jsx(Comp, {}));
    expect(spy.getCall(0).firstArg).to.be.false;
    expect(spy.lastCall.firstArg).to.be.true;
  }));
});