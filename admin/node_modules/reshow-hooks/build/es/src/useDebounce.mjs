import { useRef } from "react";
import { debounce } from "call-func";

var useDebounce = function useDebounce(func, defaultDelay, scope) {
  var _debounce = useRef();

  if (!_debounce.current) {
    _debounce.current = debounce(func, defaultDelay);
  }

  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _debounce.current({
      scope,
      args
    });
  };
};

export default useDebounce;