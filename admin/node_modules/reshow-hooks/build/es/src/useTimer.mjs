import { useEffect, useRef, useMemo } from "react";
import callfunc from "call-func";

var useTimer = function useTimer(interval) {
  var timer = useRef();
  var act = useMemo(function () {
    return interval ? {
      run: setInterval,
      stop: clearInterval
    } : {
      run: setTimeout,
      stop: clearTimeout
    };
  }, []);

  var stop = function stop() {
    if (timer.current) {
      callfunc(act.stop, [timer.current]);
      timer.current = null;
    }
  };

  useEffect(function () {
    return function () {
      return stop();
    };
  }, []);

  var run = function run(func, delay) {
    stop();
    timer.current = callfunc(act.run, [func, delay]);
  };

  return [run, stop];
};

export default useTimer;