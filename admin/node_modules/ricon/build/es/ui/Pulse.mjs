import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import pulsate from "keyframe-css/pulsate";
import breath from "keyframe-css/breath";
import reactStyle from "./reactStyle.mjs";
import useLazyInject from "./useLazyInject.mjs";
import SemanticUI from "./SemanticUI.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Pulse = function Pulse(_ref) {
  var {
    style,
    pointStyle,
    ringStyle
  } = _ref;
  return /*#__PURE__*/_jsxs(SemanticUI, {
    style: style,
    children: [/*#__PURE__*/_jsx(SemanticUI, {
      styles: [injects.pulsePoint, pointStyle]
    }), /*#__PURE__*/_jsx(SemanticUI, {
      styles: [injects.pulseRing, ringStyle]
    })]
  });
};

var PulseIcon = function PulseIcon(_ref2) {
  var {
    pointColor = "rgba(5,80,255,0.9)",
    pointRotateX = 0,
    ringColor = "#89849b",
    animation = "pulsate",
    style = null
  } = _ref2;
  injects = useLazyInject(InjectStyles, injects);
  var pointStyle = reactStyle({
    background: pointColor,
    transform: ["translate(-50%,-50%) rotateX(" + pointRotateX + "deg)"]
  }, false, false);
  var ringStyle = reactStyle({
    boxShadow: ["0 0 1px 2px " + ringColor],
    animation: [animation + " 1s ease-out"],
    animationIterationCount: ["infinite"]
  }, false, false);
  return /*#__PURE__*/_jsx(Pulse, {
    style: _objectSpread(_objectSpread({}, Styles.pulse), style),
    pointStyle: pointStyle,
    ringStyle: ringStyle
  });
};

export default PulseIcon;
var Styles = {
  pulse: {
    position: "relative",
    zIndex: 1,
    display: "inline-block",
    width: 40,
    height: 40
  }
};
var injects;
var InjectStyles = {
  pulsePoint: [{
    borderRadius: ["50%"],
    height: 14,
    width: 14,
    position: "absolute",
    top: "50%",
    left: "50%"
  }],
  pulseRing: [{
    borderRadius: ["50%"],
    height: "100%",
    opacity: 0,
    filter: "alpha(opacity=0)",
    msFilter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
  }],
  pulsateKeyframe: pulsate.pulsate,
  breathKeyframe: breath.breath
};