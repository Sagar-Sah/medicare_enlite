"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unsafeSet = exports["default"] = void 0;

var isPrototypePolluted = function isPrototypePolluted(arrPath) {
  var joinPath = "|".concat(arrPath.join("|"), "|");
  return ["__proto__", "constructor", "prototype"].some(function (key) {
    return -1 !== joinPath.indexOf("|".concat(key, "|"));
  });
};

var replaceValue = function replaceValue(obj, arrPath, val, isAppend, unSafe) {
  if (!unSafe && isPrototypePolluted(arrPath)) {
    throw "Contain un-safe key.";
  }

  var last = arrPath.pop();
  var linkObj = obj;
  arrPath.forEach(function (k) {
    var _linkObj$k;

    linkObj[k] = (_linkObj$k = linkObj[k]) !== null && _linkObj$k !== void 0 ? _linkObj$k : Object.create(null);
    linkObj = linkObj[k];
  });

  if (isAppend && (!linkObj[last] || !linkObj[last].push)) {
    if (!linkObj[last]) {
      linkObj[last] = [val];
    } else {
      linkObj[last] = [linkObj[last], val];
    }
  } else if (isAppend && linkObj[last].push) {
    linkObj[last].push(val);
  } else {
    linkObj[last] = val;
  }
};

var unsafeSet = function unsafeSet(obj, arrPath, val, isAppend) {
  return replaceValue(obj, arrPath, val, isAppend, true);
};

exports.unsafeSet = unsafeSet;
var _default = replaceValue;
exports["default"] = _default;