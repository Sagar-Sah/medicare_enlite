import { doc } from "win-doc";
import { oneItemArrayToString } from "with-array";
import { T_UNDEFINED, IS_ARRAY } from "reshow-constant";
import getKeyReg, { getMultiMatchReg } from "./getKeyReg.mjs";
import getUrlAnaly from "./getUrlAnaly.mjs";
var defaultValue = T_UNDEFINED;

var parseUrl = function parseUrl(url) {
  var oUrl = getUrlAnaly(url);
  return {
    host: oUrl[11],
    query: oUrl[16],
    path: oUrl[13]
  };
};

var resetUrl = function resetUrl(url) {
  return url ? url : doc().URL;
};

var getUrl = function getUrl(keys, origUrl) {
  var _parseUrl = parseUrl(resetUrl(origUrl)),
      _parseUrl$query = _parseUrl.query,
      query = _parseUrl$query === void 0 ? "" : _parseUrl$query;

  var getOne = function getOne(key) {
    var keyEq = key + "=";

    if (query.indexOf(keyEq) === query.lastIndexOf(keyEq)) {
      var reg = getKeyReg(key);
      var exec = reg.exec(query);
      return !exec ? defaultValue : decodeURIComponent(exec[3]);
    } else {
      var results = getUrlArray(key, query);
      return oneItemArrayToString(results);
    }
  };

  if (IS_ARRAY(keys)) {
    var results = {};
    keys.forEach(function (key) {
      results[key] = getOne(key);
    });
    return results;
  } else {
    return keys ? getOne(keys) : defaultValue;
  }
};

var getMultiKey = function getMultiKey(key, query) {
  var reg = getMultiMatchReg(key);
  var results = [];
  var exec;

  while (exec = reg.exec(query)) {
    results.push(decodeURIComponent(exec[3]));
  }

  return results;
};

var getUrlArray = function getUrlArray(key, origUrl) {
  var _parseUrl2 = parseUrl(resetUrl(origUrl)),
      _parseUrl2$query = _parseUrl2.query,
      query = _parseUrl2$query === void 0 ? "" : _parseUrl2$query;

  return getMultiKey(key, query);
};

var unsetUrl = function unsetUrl(key, url) {
  url = resetUrl(url);
  var reg = getKeyReg(key);
  var exec;

  while (exec = reg.exec(url)) {
    url = exec[2] === "?" ? url.replace(reg, "?") : url.replace(reg, "");
  }

  return url;
};

var setUrl = function setUrl(key, value, url, KeepRawValue) {
  var multi = IS_ARRAY(value);
  url = unsetUrl(key, resetUrl(url));
  (multi ? value : [value]).forEach(function (vItem) {
    if (!KeepRawValue) {
      vItem = encodeURIComponent(vItem);
    }

    url = url + (-1 === url.indexOf("?") ? "?" : "&") + key + "=" + vItem;
  });
  return url;
};

export { getUrl, getUrlArray, parseUrl, unsetUrl, resetUrl as url };
export default setUrl;