"use strict";(self.webpackChunkenlite_prime=self.webpackChunkenlite_prime||[]).push([[551],{39551:(e,t,a)=>{a.r(t),a.d(t,{default:()=>m});a(89526);var i=a(98463),s=a(54519),l=a(66892),d=a.n(l),o=(a(2652),a(10403)),n=a(85770);const r="boilerplate.containers.Tables",c=(0,n.vU)({basicTitle:{id:`${r}.Basic.title`,defaultMessage:"Basic Table"},strippedTableTitle:{id:`${r}.Basic.stripped.title`,defaultMessage:"Stripped Table"},strippedTableDesc:{id:`${r}.Basic.stripped.desc`,defaultMessage:"They (allegedly) aid usability in reading tabular data by offering the user a coloured means of separating and differentiating rows from one another"},hoverTableTitle:{id:`${r}.Basic.hover.title`,defaultMessage:"Hover Table"},hoverTableDesc:{id:`${r}.Basic.hover.desc`,defaultMessage:"Hover tables is addition option that allows you to see what row you selected"},borderedTableTitle:{id:`${r}.Basic.bordered.title`,defaultMessage:"Bordered Table"},borderedTableDesc:{id:`${r}.Basic.bordered.desc`,defaultMessage:"Old is gold, here is old fashion bordered table, we tweaked it a bit so that the headings looks more prominent."},statusTableTitle:{id:`${r}.Basic.status.title`,defaultMessage:"Status Table With Label"},statusTableDesc:{id:`${r}.Basic.status.desc`,defaultMessage:""},colouredTableTitle:{id:`${r}.Basic.coloured.title`,defaultMessage:"Coloured Row"},colouredTableDesc:{id:`${r}.Basic.coloured.desc`,defaultMessage:""},emptyTableTitle:{id:`${r}.Basic.empty.title`,defaultMessage:"Empty Table"},emptyTableDesc:{id:`${r}.Basic.empty.desc`,defaultMessage:"UI Table when no data to be shown"},dataTableTitle:{id:`${r}.DataTable.title`,defaultMessage:"Data Table"},advancedTitle:{id:`${r}.DataTable.advanced.title`,defaultMessage:"Advanced Data Table"},advancedDesc:{id:`${r}.DataTable.advanced.desc`,defaultMessage:"It uses npm mui-datatables. It's easy to use, you just describe columns and data collection. After that it will magically build features such as filtering, viewing / hiding columns, exporting to CSV downloads, printing, and more. It uses npm mui-datatables. It's easy to use, you just describe columns and data collection. After that it will magically build features such as filtering, viewing / hiding columns, exporting to CSV downloads, printing, and more."},playgroundTitle:{id:`${r}.Playground.title`,defaultMessage:"Table Playground"},editTitle:{id:`${r}.Edit.title`,defaultMessage:"Editable Cell"},inRowEditTitle:{id:`${r}.Edit.inRow.title`,defaultMessage:"In-Row Editable Cell"},inRowEditDesc:{id:`${r}.Edit.inRow.desc`,defaultMessage:"The Editable Table Cell supports editing features including creating, updating and deleting rows. The editing state contains information about rows currently being edited, changes applied to a particular row, and rows that have been deleted and created."}});var u,b=a(50706);function p(e,t,a,i){u||(u="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var s=e&&e.defaultProps,l=arguments.length-3;if(t||0===l||(t={children:void 0}),1===l)t.children=i;else if(l>1){for(var d=new Array(l),o=0;o<l;o++)d[o]=arguments[o+3];t.children=d}if(t&&s)for(var n in s)void 0===t[n]&&(t[n]=s[n]);else t||(t=s||{});return{$$typeof:u,type:e,key:void 0===a?null:""+a,ref:null,props:t,_owner:null}}const g=(0,s.ZL)()((()=>({root:{flexGrow:1}})));var f=p(b.Z,{}),T=p("div",{},void 0,p(o.xg,{}),p(o.c6,{componentName:"components/Tables/EmptyData.js"}));const m=(0,n.XN)((function(e){const{intl:t}=e,{classes:a}=g(),s=d().name+" - Table",l=d().desc;return p("div",{},void 0,p(i.ql,{},void 0,p("title",{},void 0,s),p("meta",{name:"description",content:l}),p("meta",{property:"og:title",content:s}),p("meta",{property:"og:description",content:l}),p("meta",{property:"twitter:title",content:s}),p("meta",{property:"twitter:description",content:l})),p(o.gk,{title:t.formatMessage(c.strippedTableTitle),whiteBg:!0,icon:"view_headline",desc:t.formatMessage(c.strippedTableDesc)},void 0,p("div",{},void 0,f,p(o.c6,{componentName:"containers/Tables/StrippedTable.js"}))),p(o.gk,{title:t.formatMessage(c.emptyTableTitle),whiteBg:!0,icon:"crop_5_4",desc:t.formatMessage(c.emptyTableDesc)},void 0,T))}))}}]);