"use strict";(self.webpackChunkenlite_prime=self.webpackChunkenlite_prime||[]).push([[764],{40764:(e,t,i)=>{i.r(t),i.d(t,{default:()=>fe});var o=i(89526),l=(i(2652),i(54519)),a=i(98463),s=i(66892),n=i.n(s),d=i(10403),c=i(85770);const u="boilerplate.containers.Form",r=(0,c.vU)({buttonTitle:{id:`${u}.Button.title`,defaultMessage:"Buttons"},buttonStandardTitle:{id:`${u}.Button.standard.title`,defaultMessage:"Standard Buttons"},buttonStandardDesc:{id:`${u}.Button.standard.desc`,defaultMessage:"Buttons communicate the action that will occur when the user touches them."},buttonFloatingTitle:{id:`${u}.Button.floating.title`,defaultMessage:"Floating Action Buttons"},buttonFloatingDesc:{id:`${u}.Button.floating.desc`,defaultMessage:"A floating action button represents the primary action in an application. Shaped like a circled icon floating above the UI, it has an ink wash upon focus and lifts upon selection."},buttonCustomizedTitle:{id:`${u}.Button.custom.title`,defaultMessage:"Customized Buttons"},buttonCustomizedDesc:{id:`${u}.Button.custom.desc`,defaultMessage:""},buttonComplexTitle:{id:`${u}.Button.complex.title`,defaultMessage:"Complex Buttons"},buttonComplexDesc:{id:`${u}.Button.complex.desc`,defaultMessage:"The Flat Buttons, Raised Buttons, Floating Action Buttons and Icon Buttons are built on top of the same component: the ButtonBase. You can take advantage of this lower level component to build custom interactions."},toggleTitle:{id:`${u}.ToggleButton.title`,defaultMessage:"Toggle Button"},toggleButtonTitle:{id:`${u}.ToggleButton.toggleButton.title`,defaultMessage:"Toggle Buttons"},toggleButtonDesc:{id:`${u}.ToggleButton.toggleButton.desc`,defaultMessage:"Toggle buttons can be used to group related options."},dialSimpleTitle:{id:`${u}.DialButton.simple.title`,defaultMessage:"Simple Speed Dial Button"},dialSimpleDesc:{id:`${u}.DialButton.simple.desc`,defaultMessage:"The floating action button can display related actions."},dialCustomTitle:{id:`${u}.DialButton.custom.title`,defaultMessage:"Custom close icon"},dialCustomDesc:{id:`${u}.DialButton.custom.desc`,defaultMessage:"You can provide an alternate icon for the closed and open states using the icon and openIcon props of the SpeedDialIcon component."},dialTooltipsTitle:{id:`${u}.DialButton.tooltips.title`,defaultMessage:"Persistent action tooltips"},dialTooltipsDesc:{id:`${u}.DialButton.tooltips.desc`,defaultMessage:"The SpeedDialActions tooltips can be be displayed persistently so that users don't have to long-press in order to see the tooltip on touch devices."},textfiledTitle:{id:`${u}.Textfields.title`,defaultMessage:"Textfields"},textfiledComponentsTitle:{id:`${u}.Textfields.components.title`,defaultMessage:"Textfield Components"},textfiledComponentsDesc:{id:`${u}.Textfields.components.desc`,defaultMessage:"Text fields allow users to input text and usually appear in forms. Users may enter text, numbers, or mixed-format types of input."},textfiledOutlineTitle:{id:`${u}.Textfields.outline.title`,defaultMessage:"Textfield Outlined Variant"},textfiledOutlineDesc:{id:`${u}.Textfields.components.desc`,defaultMessage:"TextField supports outlined styling."},textfiledFilledTitle:{id:`${u}.Textfields.filled.title`,defaultMessage:"Textfield Filled Variant"},textfiledFilledDesc:{id:`${u}.Textfields.filled.desc`,defaultMessage:"TextField supports filled styling."},textfiledLayoutTitle:{id:`${u}.Textfields.layout.title`,defaultMessage:"Textfield Layout And Design"},textfiledLayoutDesc:{id:`${u}.Textfields.layout.desc`,defaultMessage:""},textfiledIconTitle:{id:`${u}.Textfields.icon.title`,defaultMessage:"Input With Additonal Icon"},textfiledIconDesc:{id:`${u}.Textfields.icon.desc`,defaultMessage:"Input allows the provision of InputAdornment. These can be used to add a prefix, a suffix or an action to an input."},textfiledFormatTitle:{id:`${u}.Textfields.format.title`,defaultMessage:"Formatted Inputs"},textfiledFormatDesc:{id:`${u}.Textfields.format.desc`,defaultMessage:"We demonstrate how you could be using third-party libraries to format your input. In the following demo, we are using react-text-mask and react-number-format libraries."},autocompleteTitle:{id:`${u}.Autocomplete.title`,defaultMessage:"Autocomplete"},hightlightTitle:{id:`${u}.Autocomplete.hightlight.title`,defaultMessage:"Highlight Suggestion"},hightlightDesc:{id:`${u}.Autocomplete.hightlight.desc`,defaultMessage:"In the following example, we demonstrate how to use react-autosuggest. It's also using autosuggest-highlight for the highlighting logic."},autoTitle:{id:`${u}.Autocomplete.auto.title`,defaultMessage:"Auto Suggestion"},autoDesc:{id:`${u}.Autocomplete.auto.desc`,defaultMessage:"The autocomplete is a normal text input enhanced by a panel of suggested options."},tagTitle:{id:`${u}.Autocomplete.tag.title`,defaultMessage:"Tag Suggestion"},tagDesc:{id:`${u}.Autocomplete.tag.desc`,defaultMessage:"In the following example, we demonstrate with tag input and how to use downshift. It mean press Shift + down to show autocomplete"},selectTitle:{id:`${u}.Autocomplete.select.title`,defaultMessage:"Select Suggestion"},selectDesc:{id:`${u}.Autocomplete.select.desc`,defaultMessage:"In the following example, we demonstrate how to use react-select."},selectTagTitle:{id:`${u}.Autocomplete.selectTag.title`,defaultMessage:"Select Tag Suggestion"},selectTagDesc:{id:`${u}.Autocomplete.selectTag.desc`,defaultMessage:"In the following example, we demonstrate how to combine tag input and react-select."},datePickerTitle:{id:`${u}.DatePicker.title`,defaultMessage:"Date Time-Picker"},dateTitle:{id:`${u}.DatePicker.date.title`,defaultMessage:"Date Picker"},dateDesc:{id:`${u}.DatePicker.date.desc`,defaultMessage:"Date pickers use a dialog window to select a single date. The selected day is indicated by a filled circle. The current day is indicated by a different color and type weight."},timeTitle:{id:`${u}.DatePicker.time.title`,defaultMessage:"Time Picker"},timeDesc:{id:`${u}.DatePicker.time.desc`,defaultMessage:"Time pickers use a dialog to select a single time (in the hours:minutes format). The selected time is indicated by the filled circle at the end of the clock hand."},dateTimeTitle:{id:`${u}.DatePicker.dateTime.title`,defaultMessage:"Date & Time Picker"},dateTimeDesc:{id:`${u}.DatePicker.dateTime.desc`,defaultMessage:"Its a combination of date & time picker and allows that uses the modal to select both date and time with one control."},reduxFormTitle:{id:`${u}.ReduxForm.title`,defaultMessage:"Reduxform"},formTitle:{id:`${u}.ReduxForm.form.title`,defaultMessage:"Redux Form"},formDesc:{id:`${u}.ReduxForm.form.desc`,defaultMessage:"This is a simple demonstration of how to connect all the standard material-ui form elements to redux-form."},checkRadioTitle:{id:`${u}.Checkbox.title`,defaultMessage:"Checkbox Radio"},checkBoxTitle:{id:`${u}.Checkbox.check.title`,defaultMessage:"Checkbox"},checkboxDesc:{id:`${u}.Checkbox.check.desc`,defaultMessage:"Checkboxes allow the user to select multiple options from a set. If you have multiple options appearing in a list, you can preserve space by using checkboxes instead of on/off switches. If you have a single option, avoid using a checkbox and use an on/off switch instead."},radioTitle:{id:`${u}.Checkbox.radio.title`,defaultMessage:"Radio Button"},radioDesc:{id:`${u}.Checkbox.radio.desc`,defaultMessage:"Radio buttons allow the user to select one option from a set. Use radio buttons for exclusive selection if you think that the user needs to see all available options side-by-side; otherwise, consider a dropdown, which uses less space than displaying all options."},switchesTitle:{id:`${u}.Switch.switches.title`,defaultMessage:"Switches"},switchesDesc:{id:`${u}.Switch.switches.desc`,defaultMessage:"On/off switches toggle the state of a single settings option. The option that the switch controls, as well as the state it\u2019s in, should be made clear from the corresponding inline label."},selectboxTitle:{id:`${u}.Select.title`,defaultMessage:"Selectbox"},selectSimpleTitle:{id:`${u}.Select.simple.title`,defaultMessage:"Simple Selectbox"},selectSimpleDesc:{id:`${u}.Select.simple.desc`,defaultMessage:"Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element."},selectVariationTitle:{id:`${u}.Select.variation.title`,defaultMessage:"Select Variaton Style"},selectVariationDesc:{id:`${u}.Select.variation.desc`,defaultMessage:"Selection with filled and outlined varition."},selectNativeTitle:{id:`${u}.Select.native.title`,defaultMessage:"Native Selectbox"},selectNativeDesc:{id:`${u}.Select.native.desc`,defaultMessage:"As the user experience can be improved on mobile using the native select of the platform, we allow such pattern."},selectMultiTitle:{id:`${u}.Select.multi.title`,defaultMessage:"Multiple Selectbox"},selectMultiDesc:{id:`${u}.Select.multi.desc`,defaultMessage:"The Select component can handle multiple selections. It's enabled with the multiple property."},selectControllTitle:{id:`${u}.Select.controll.title`,defaultMessage:"Controlled Open Select"},selectControllDesc:{id:`${u}.Select.controll.desc`,defaultMessage:""},sliderTitle:{id:`${u}.Slider.title`,defaultMessage:"Slider Range"},sliderInputTitle:{id:`${u}.Slider.input.title`,defaultMessage:"Slider Input"},sliderInputDesc:{id:`${u}.Slider.input.desc`,defaultMessage:"Sliders allow users to make selections from a range of values."},sliderInputAdvanceTitle:{id:`${u}.Slider.advanced.title`,defaultMessage:"Advance Slider Input"},sliderInputAdvanceDesc:{id:`${u}.Slider.advanced.desc`,defaultMessage:"This some advanced examples using slider"},uploadTitle:{id:`${u}.Upload.title`,defaultMessage:"Upload"},uploadBasicTitle:{id:`${u}.Upload.basic.title`,defaultMessage:"Upload With Drop Zone"},uploadBasicDesc:{id:`${u}.Upload.basic.desc`,defaultMessage:"Simple HTML5-compliant drag'n'drop zone for files built with React Drop Zone. The component containing a file upload (dropzone) area, images and files preview and some snazzy File Allowed/Not Allowed effects."},uploadImagesTitle:{id:`${u}.Upload.images.title`,defaultMessage:"Upload Only Images"},uploadImagesDesc:{id:`${u}.Upload.images.desc`,defaultMessage:"This example allowing users to upload images only"},uploadButtonTitle:{id:`${u}.Upload.button.title`,defaultMessage:"Upload Button"},uploadButtonDesc:{id:`${u}.Upload.button.desc`,defaultMessage:"Trigger upload file via button with ref attribute"},editorTitle:{id:`${u}.Editor.title`,defaultMessage:"Wysiwyg Editor"},editorBasicTitle:{id:`${u}.Editor.basic.title`,defaultMessage:"Text Editor"},editorBasicDesc:{id:`${u}.Editor.basic.desc`,defaultMessage:"A Wysiwyg Built on ReactJS and DraftJS. Editor can be simply imported and used as a React Component. Make sure to also include react-draft-wysiwyg.css from node_modules."},editorInlineTitle:{id:`${u}.Editor.inline.title`,defaultMessage:"Inline Text Editor"},editorInlineDesc:{id:`${u}.Editor.inline.desc`,defaultMessage:"In this editor a toolbar shows up once you select part of the text"}});var p=i(99813),f=i.n(p),m=i(45153),g=i(80061),h=i(59001),T=i.n(h),v=i(54714),b=i.n(v),x=i(3199),M=i.n(x),$=i(76587),w=i.n($),y=i(25096),S=i(4309),D=i.n(S),k=i(5332),B=i.n(k),I=i(43340),C=i.n(I),A=i(5700),F=i.n(A),O=i(69099),N=i(64685),R=i(71387),Z=i.n(R),P=i(36999),U=i(60307);const E=e=>({type:U.q,data:e}),_={type:U.E};var W;function z(e,t,i,o){W||(W="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var l=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),1===a)t.children=o;else if(a>1){for(var s=new Array(a),n=0;n<a;n++)s[n]=arguments[n+3];t.children=s}if(t&&l)for(var d in l)void 0===t[d]&&(t[d]=l[d]);else t||(t=l||{});return{$$typeof:W,type:e,key:void 0===i?null:""+i,ref:null,props:t,_owner:null}}function L(){return L=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(e[o]=i[o])}return e},L.apply(this,arguments)}const V=e=>{let{input:t,...i}=e;return o.createElement(y.default,L({},t,i,{valueselected:t.value,onChange:(e,i)=>t.onChange(i)}))},q=e=>null==e?"Required":void 0,j=e=>e&&!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e)?"Invalid email":void 0,H=(0,l.ZL)()((e=>({root:{flexGrow:1,padding:30},field:{width:"100%",marginBottom:20},fieldBasic:{width:"100%",marginBottom:20,marginTop:10},inlineWrap:{display:"flex",flexDirection:"row"},buttonInit:{margin:e.spacing(4),textAlign:"center"}}))),J={text:"Sample Text",email:"sample@mail.com",radio:"option1",selection:"option1",onof:!0,checkbox:!0,textarea:"This is default text"};var Y=z(F(),{variant:"h5",component:"h3"},void 0,"Simple Form Example"),G=z(F(),{component:"p"},void 0,"The delay between when you click (Submit) and when the alert dialog pops up is intentional, to simulate server latency."),K=z(B(),{component:"label"},void 0,"Choose One Option"),X=z(C(),{value:"option1",control:z(w(),{}),label:"Option 1"}),Q=z(C(),{value:"option2",control:z(w(),{}),label:"Option 2"}),ee=z(b(),{htmlFor:"selection"},void 0,"Selection"),te=z(T(),{value:"option1"},void 0,"Option One"),ie=z(T(),{value:"option2"},void 0,"Option Two"),oe=z(T(),{value:"option3"},void 0,"Option Three"),le=z(B(),{component:"label"},void 0,"Toggle Input"),ae=z(C(),{control:z(m.Z,{name:"onof",component:P.Hc}),label:"On/OF Switch"}),se=z(C(),{control:z(m.Z,{name:"checkbox",component:P.RK}),label:"Checkbox"});const ne=(0,g.Z)({form:"reduxFormDemo",enableReinitialize:!0})((function(e){const{classes:t}=H(),{handleSubmit:i,pristine:o,reset:l,submitting:a,init:s,clear:n}=e;return z("div",{},void 0,z(M(),{container:!0,spacing:3,alignItems:"flex-start",direction:"row",justifyContent:"center"},void 0,z(M(),{item:!0,xs:12,md:6},void 0,z(f(),{className:t.root},void 0,Y,G,z("div",{className:t.buttonInit},void 0,z(Z(),{onClick:()=>s(J),color:"secondary",type:"button"},void 0,"Load Sample Data"),z(Z(),{onClick:()=>n(),type:"button"},void 0,"Clear Data")),z("form",{onSubmit:i},void 0,z("div",{},void 0,z(m.Z,{name:"text",component:P._Z,placeholder:"Text Field",label:"Text Field",validate:q,required:!0,className:t.field})),z("div",{},void 0,z(m.Z,{name:"email",component:P._Z,placeholder:"Email Field",label:"Email",required:!0,validate:[q,j],className:t.field})),z("div",{className:t.fieldBasic},void 0,K,z(m.Z,{name:"radio",className:t.inlineWrap,component:V},void 0,X,Q)),z("div",{},void 0,z(D(),{variant:"standard",className:t.field},void 0,ee,z(m.Z,{name:"selection",component:P.p_,placeholder:"Selection",autoWidth:true},void 0,te,ie,oe))),z("div",{className:t.fieldBasic},void 0,le,z("div",{className:t.inlineWrap},void 0,ae,se)),z("div",{className:t.field},void 0,z(m.Z,{name:"textarea",className:t.field,component:P._Z,placeholder:"Textarea",label:"Textarea",multiline:true,rows:4})),z("div",{},void 0,z(Z(),{variant:"contained",color:"secondary",type:"submit",disabled:a},void 0,"Submit"),z(Z(),{type:"button",disabled:o||a,onClick:l},void 0,"Reset")))))))})),de=(0,N.connect)((e=>({initialValues:e.initval.formValues})),(e=>({init:(0,O.bindActionCreators)(E,e),clear:()=>e(_)})))(ne);var ce;function ue(e,t,i,o){ce||(ce="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var l=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),1===a)t.children=o;else if(a>1){for(var s=new Array(a),n=0;n<a;n++)s[n]=arguments[n+3];t.children=s}if(t&&l)for(var d in l)void 0===t[d]&&(t[d]=l[d]);else t||(t=l||{});return{$$typeof:ce,type:e,key:void 0===i?null:""+i,ref:null,props:t,_owner:null}}const re=(0,l.ZL)()((()=>({root:{flexGrow:1}})));var pe=ue("br",{});const fe=(0,c.XN)((function(e){const[t,i]=(0,o.useState)(),l=n().name+" - Form",s=n().desc,{intl:c}=e,{classes:u}=re();return ue("div",{className:u.root},void 0,ue(a.ql,{},void 0,ue("title",{},void 0,l),ue("meta",{name:"description",content:s}),ue("meta",{property:"og:title",content:l}),ue("meta",{property:"og:description",content:s}),ue("meta",{property:"twitter:title",content:l}),ue("meta",{property:"twitter:description",content:s})),ue(d.gk,{title:c.formatMessage(r.formTitle),icon:"library_books",desc:c.formatMessage(r.formDesc)},void 0,ue("div",{},void 0,ue(de,{onSubmit:e=>(e=>{setTimeout((()=>{i(e)}),500)})(e)}),t&&ue("p",{},void 0,"You submitted:",pe,JSON.stringify(t)),ue(d.c6,{componentName:"containers/Forms/demos/ReduxFormDemo.js"}))))}))}}]);