import { expect } from "chai";
import getSafeReg, { cacheReg } from "../index.mjs";
describe("test cache reg", function () {
  var getRegString = function getRegString(name) {
    return "(([#?&])" + getSafeReg(name) + "=)([^&#]*)";
  };

  it("get cache back", function () {
    var cache = {};

    var getCache = function getCache(name) {
      return cacheReg(cache)(getRegString)(name);
    };

    var reg = getCache("foo");
    var exec = reg.exec("?foo=bar");
    expect(exec[3]).to.equal("bar");
    expect(cache["foo"]).to.not.be["null"];
  });
  it("tet flags", function () {
    var cache = {};

    var getCache = function getCache(name) {
      return cacheReg(cache)(getRegString, "g")(name);
    };

    var reg = getCache("foo");
    var exec;
    var arr = [];
    var str = "?foo=&foo=1&foo=2";

    while (exec = reg.exec(str)) {
      arr.push(exec[3]);
    }

    expect(arr).to.deep.equal(["", "1", "2"]);
  });
});