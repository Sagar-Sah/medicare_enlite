import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import getScrollInfo from "get-scroll-info";
import isOnScreen from "./isOnScreen.mjs";
import getDomPositionInfo from "./getDomPositionInfo.mjs";
import pos from "./positions.mjs";
var T = "T";
var R = "R";
var B = "B";
var L = "L";
var C = "C";
var getRevertLoc = function getRevertLoc(fromLoc) {
  var loc;
  switch (fromLoc) {
    case pos.TL:
      loc = pos.TR;
      break;
    case pos.TR:
      loc = pos.TL;
      break;
    case pos.BL:
      loc = pos.BR;
      break;
    case pos.BR:
      loc = pos.BL;
      break;
    default:
      loc = fromLoc;
      break;
  }
  return loc;
};
var calWindowOffset = function calWindowOffset(domInfo, scrollInfo) {
  var distance = {
    top: domInfo.top - scrollInfo.top,
    right: scrollInfo.right - domInfo.right,
    bottom: scrollInfo.bottom - domInfo.bottom,
    left: domInfo.left - scrollInfo.left
  };
  var maxDistance = Math.max(distance.top, distance.right, distance.bottom, distance.left);
  var distanceFlip = {
    [distance.top]: T,
    [distance.right]: R,
    [distance.bottom]: B,
    [distance.left]: L
  };
  var firstKey = distanceFlip[maxDistance];
  var secondKey;
  if (firstKey === T || firstKey === B) {
    distanceFlip = {
      [distance.right]: R,
      [distance.left]: L
    };
    secondKey = distanceFlip[Math.max(distance.left, distance.right)];
  } else {
    distanceFlip = {
      [distance.top]: T,
      [distance.bottom]: B
    };
    secondKey = distanceFlip[Math.max(distance.top, distance.bottom)];
  }
  var locs = [getRevertLoc(pos[firstKey + secondKey]), pos[firstKey + C], pos[secondKey + C], getRevertLoc(pos[secondKey + firstKey])];
  return {
    locs,
    firstKey,
    secondKey
  };
};
var getWindowOffset = function getWindowOffset(dom, debug) {
  if (!dom) {
    console.warn("getWindowOffset not assign dom");
    return false;
  }
  var {
    fixedNode,
    scrollNode,
    domInfo: targetDomInfo
  } = getDomPositionInfo(dom);
  var scrollInfo = getScrollInfo();
  var cookScrollInfo = _objectSpread({}, scrollInfo);
  if (fixedNode) {
    var fixedScrollInfo = getScrollInfo(fixedNode);
    cookScrollInfo.top = fixedScrollInfo.top;
    cookScrollInfo.right = scrollInfo.scrollNodeWidth;
    cookScrollInfo.bottom = scrollInfo.scrollNodeHeight;
    cookScrollInfo.left = fixedScrollInfo.left;
  } else if (scrollNode) {
    var scrollNodeScrollInfo = getScrollInfo(scrollNode);
    cookScrollInfo.top += scrollNodeScrollInfo.top;
    cookScrollInfo.right += scrollNodeScrollInfo.left;
    cookScrollInfo.bottom += scrollNodeScrollInfo.top;
    cookScrollInfo.left += scrollNodeScrollInfo.left;
  }
  var domInfo = isOnScreen(targetDomInfo, cookScrollInfo);
  if (!domInfo.isOnScreen && false !== debug) {
    // should not break function here
    // not use return here
    console.warn("Dom is not in screen", {
      dom,
      domInfo,
      scrollInfo,
      cookScrollInfo
    });
  }
  var result = _objectSpread({
    domInfo,
    scrollInfo
  }, calWindowOffset(domInfo, cookScrollInfo));
  return result;
};
export default getWindowOffset;