"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _createEl = require("create-el");

var _winDoc = require("win-doc");

var _getObjectValue = _interopRequireDefault(require("get-object-value"));

var _cssQuerySelector = _interopRequireDefault(require("css-query-selector"));

// https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.8/dist/components/
var SEMANTIC_VERSION = "/npm/fomantic-ui@2.8.8/dist/components";
var semanticMap = {
  button: SEMANTIC_VERSION + "/button.min.css",
  card: SEMANTIC_VERSION + "/card.min.css",
  checkbox: SEMANTIC_VERSION + "/checkbox.min.css",
  dimmer: SEMANTIC_VERSION + "/dimmer.min.css",
  divider: SEMANTIC_VERSION + "/divider.min.css",
  dropdown: SEMANTIC_VERSION + "/dropdown.min.css",
  form: SEMANTIC_VERSION + "/form.min.css",
  header: SEMANTIC_VERSION + "/header.min.css",
  image: SEMANTIC_VERSION + "/image.min.css",
  input: SEMANTIC_VERSION + "/input.min.css",
  item: SEMANTIC_VERSION + "/item.min.css",
  label: SEMANTIC_VERSION + "/label.min.css",
  list: SEMANTIC_VERSION + "/list.min.css",
  loader: SEMANTIC_VERSION + "/loader.min.css",
  menu: SEMANTIC_VERSION + "/menu.min.css",
  message: SEMANTIC_VERSION + "/message.min.css",
  modal: SEMANTIC_VERSION + "/modal.min.css",
  popup: SEMANTIC_VERSION + "/popup.min.css",
  progress: SEMANTIC_VERSION + "/progress.min.css",
  rail: SEMANTIC_VERSION + "/rail.min.css",
  search: SEMANTIC_VERSION + "/search.min.css",
  segment: SEMANTIC_VERSION + "/segment.min.css",
  tab: SEMANTIC_VERSION + "/tab.min.css",
  table: SEMANTIC_VERSION + "/table.min.css"
};
var cssMap = {
  "fixed-data-table": "/npm/fixed-data-table-2@0.8.13/dist/fixed-data-table.min.css",
  prism: "/npm/prismjs/themes/prism.min.css"
};
var group = {
  semantic: semanticMap,
  "default": cssMap
};
var cdn = "https://cdn.jsdelivr.net";
var load = [];
/**
 * Clean bfcache for offline
 */

(0, _winDoc.win)().addEventListener && (0, _winDoc.win)().addEventListener("load", function () {
  return load.splice(0, load.length);
});

var needCSS = function needCSS(mods, groupKey) {
  if (groupKey === void 0) {
    groupKey = "default";
  }

  var map = (0, _getObjectValue["default"])(group, [groupKey], {});
  mods.forEach(function (mod) {
    var url = (0, _getObjectValue["default"])(map, [mod]);
    url = url ? cdn + url : mod;

    if (url) {
      if (load[url]) {
        return;
      } else {
        load[url] = true;

        if ((0, _winDoc.win)().__null) {
          console.log("<link rel=\"stylesheet\" type=\"text/css\" href=\"" + url + "\">");
        } else {
          var cssDom = _cssQuerySelector["default"].one("link[href=\"" + url + "\"]");

          if (!cssDom) {
            (0, _createEl.css)()()(url);
          }
        }
      }
    }
  });
};

var _default = needCSS;
exports["default"] = _default;
module.exports = exports.default;