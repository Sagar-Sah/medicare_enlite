var _this = this;

import { expect } from "chai";
import { win } from "win-doc";
import nonWorker from "../index";
describe("Test Non Worker", function () {
  it("simulate support worker", function () {
    // simulate inside worker
    global.onmessage = function () {};

    global.postMessage = null;
    var oNonWorker = new nonWorker(function (e) {
      expect(e).to.deep.equal({
        data: "fake"
      });
    });

    var post = function post(payload) {
      oNonWorker.post.call(_this, payload);
    }; // simulate outside worker


    oNonWorker.addEventListener("message", function (e) {
      expect(e).to.deep.equal({
        data: "bar"
      });
    }); // post from outside

    oNonWorker.postMessage("fake"); // post from inside

    post("bar");
  });
  it("simulate without worker", function () {
    // simulate inside worker
    global.onmessage = null;
    global.postMessage = null;
    win().__null = false;
    var oNonWorker = new nonWorker(function (e) {
      expect(e).to.deep.equal({
        data: "fake"
      });
    });

    var post = function post(payload) {
      oNonWorker.post.call(_this, payload);
    }; // simulate outside worker


    oNonWorker.addEventListener("message", function (e) {
      expect(e).to.deep.equal({
        data: "bar"
      });
    }); // post from outside

    oNonWorker.postMessage("fake"); // post from inside

    post("bar");
  });
});