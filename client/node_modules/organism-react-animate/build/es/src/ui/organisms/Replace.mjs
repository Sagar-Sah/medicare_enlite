import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _assertThisInitialized from "reshow-runtime/es/helpers/assertThisInitialized";
import _inherits from "reshow-runtime/es/helpers/inherits";
import _createSuper from "reshow-runtime/es/helpers/createSuper";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
var _excluded = ["interval"];
import { Children, PureComponent } from "react";
import Change from "../organisms/Change.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var Replace = /*#__PURE__*/function (_PureComponent) {
  _inherits(Replace, _PureComponent);

  var _super = _createSuper(Replace);

  function Replace() {
    var _this;

    _classCallCheck(this, Replace);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      no: 0,
      childs: {}
    });

    _defineProperty(_assertThisInitialized(_this), "handleNext", function () {
      if (_this._time) {
        clearTimeout(_this._time);
      }

      var {
        interval
      } = _this.props;

      _this.setState(function (_ref) {
        var {
          no,
          childs
        } = _ref;
        no++;

        if (no >= childs.length) {
          no = 0;
        }

        return {
          no
        };
      });

      _this._time = setTimeout(_this.handleNext, interval);
    });

    return _this;
  }

  _createClass(Replace, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this._time) {
        clearTimeout(this._time);
      }

      var {
        interval
      } = this.props;
      this._time = setTimeout(this.handleNext, interval);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this._time);
      this._time = null;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          {
        interval
      } = _this$props,
          props = _objectWithoutProperties(_this$props, _excluded);

      var {
        no,
        childs
      } = this.state;
      return /*#__PURE__*/_jsx(Change, _objectSpread(_objectSpread({}, props), {}, {
        children: childs[no]
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var {
        children
      } = nextProps;

      if (children === prevState.prevChildren) {
        return null;
      }

      var childs = [];
      Children.map(children, function (c) {
        return c;
      }).forEach(function (child, key) {
        return childs[key] = child;
      });
      return {
        childs,
        prevChildren: children
      };
    }
  }]);

  return Replace;
}(PureComponent);

_defineProperty(Replace, "defaultProps", {
  interval: 5000
});

export default Replace;