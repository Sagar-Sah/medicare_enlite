import _asyncToGenerator from "reshow-runtime/es/helpers/asyncToGenerator";

var _AnimateImage;

import { useRef, useEffect } from "react";
import { expect } from "chai";
import { jsdom, render, act, waitFor } from "reshow-unit";
import AnimateImage from "../AnimateImage.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
var options = {
  // Use the current working directory as the document's origin, so
  // requests to local files work correctly with CORS.
  url: "http://" + process.cwd() + "/",
  features: {
    FetchExternalResources: ["img", "script"]
  },
  resources: "usable"
};
describe("Test Animate Image", function () {
  before(function () {
    jsdom("", options);
  });
  it("basic test", /*#__PURE__*/_asyncToGenerator(function* () {
    var VDom = function VDom(props) {
      return _AnimateImage || (_AnimateImage = /*#__PURE__*/_jsx(AnimateImage, {
        src: "http://localhost/xxx.png"
      }));
    };

    var wrap = render( /*#__PURE__*/_jsx(VDom, {}));
    yield waitFor(function () {
      act(function () {
        return expect(wrap.html()).to.have.string("xxx.png");
      });
    });
  }));
});