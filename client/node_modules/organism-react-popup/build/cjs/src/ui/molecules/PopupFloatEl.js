"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("reshow-runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("reshow-runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("reshow-runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactAtomicMolecule = require("react-atomic-molecule");

var _getWindowOffset = _interopRequireWildcard(require("get-window-offset"));

var _toPercentJs = require("to-percent-js");

var _PopupOverlay2 = _interopRequireDefault(require("../molecules/PopupOverlay.js"));

var PopupFloatEl = /*#__PURE__*/function (_PopupOverlay) {
  (0, _inherits2["default"])(PopupFloatEl, _PopupOverlay);

  var _super = (0, _createSuper2["default"])(PopupFloatEl);

  function PopupFloatEl(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, PopupFloatEl);
    _this = _super.call(this, props); // Need exted state form parent class (PopupOverlay)

    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_mount", true);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleResize", function () {
      _this.handleMoveTo();
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMoveTo", function () {
      if (!_this.floatEl || !_this._mount) {
        return;
      }

      var targetEl = _this.props.targetEl;

      if (!document.body.contains(targetEl)) {
        return;
      }

      var pos = _this.calPos();

      var diffTop = Math.abs(pos.top - (0, _toPercentJs.toInt)(_this.floatTop));
      var diffLeft = Math.abs(pos.left - (0, _toPercentJs.toInt)(_this.floatLeft));

      if (1 >= diffTop && 1 >= diffLeft && pos.width === _this.floatWidth && pos.height === _this.floatHeight && pos.className === _this.floatClassName) {
        return;
      }

      _this.floatTop = pos.top;
      _this.floatLeft = pos.left;
      _this.floatWidth = pos.width;
      _this.floatHeight = pos.height;
      _this.floatClassName = pos.className;

      _this.setState(pos);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "calPos", function () {
      if (!_this._mount) {
        return;
      }

      var faultPos = {
        top: -9999,
        left: -9999
      };
      var _this$props = _this.props,
          targetEl = _this$props.targetEl,
          alignParams = _this$props.alignParams;

      if (!_this.floatEl || !targetEl) {
        return faultPos;
      }

      var winInfo = (0, _getWindowOffset["default"])(targetEl);

      if (!winInfo) {
        return faultPos;
      }

      var myAlignParams = (0, _objectSpread2["default"])({
        exclude: ["lt", "lb", "rt", "rb"]
      }, alignParams);
      var info = (0, _getWindowOffset.alignUI)(targetEl, _this.floatEl, myAlignParams, winInfo);

      if (!info) {
        console.error("can not get alignUI info");
        return faultPos;
      }

      var move = info.move,
          loc = info.loc;
      var result = {
        top: move[1],
        left: move[0],
        className: (0, _getWindowOffset.getPositionString)(loc)
      };
      return result;
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setFloatEl", function (el) {
      if (el) {
        _this.floatEl = el;
      }

      _this.handleMoveTo();

      var retryAt = _this.props.retryAt;

      if (retryAt) {
        setTimeout(function () {
          return _this.handleMoveTo();
        }, retryAt);
      }
    });
    _this.state = (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, _this.state), {}, {
      refCb: _this.setFloatEl
    });
    return _this;
  }

  (0, _createClass2["default"])(PopupFloatEl, [{
    key: "getFloatEl",
    value:
    /**
     * For monitor window resize
     */

    /**
     * For extend class
     */
    function getFloatEl() {
      return this.floatEl;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener("resize", this.handleResize);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState, snapshot) {
      this.handleMoveTo();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._mount = false;
      window.removeEventListener("resize", this.handleResize);
    }
  }]);
  return PopupFloatEl;
}(_PopupOverlay2["default"]);

(0, _defineProperty2["default"])(PopupFloatEl, "defaultProps", {
  style: {
    position: "absolute",
    right: "auto"
  },
  name: "float",
  className: "popup",
  retryAt: 500
});
var _default = PopupFloatEl;
exports["default"] = _default;
module.exports = exports.default;