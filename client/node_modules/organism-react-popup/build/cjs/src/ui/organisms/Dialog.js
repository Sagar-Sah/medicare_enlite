"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _reactAtomicMolecule = require("react-atomic-molecule");

var _reshowConstant = require("reshow-constant");

var _callFunc = _interopRequireDefault(require("call-func"));

var _PopupModal = _interopRequireDefault(require("../molecules/PopupModal.js"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["name", "i18nNegativeBtn", "i18nPositiveBtn", "size", "disableClose", "className", "buttons", "header", "children", "onClick"];
var defaultName = "dialog";

var Dialog = function Dialog(_ref) {
  var _ref$name = _ref.name,
      name = _ref$name === void 0 ? defaultName : _ref$name,
      _ref$i18nNegativeBtn = _ref.i18nNegativeBtn,
      i18nNegativeBtn = _ref$i18nNegativeBtn === void 0 ? "No" : _ref$i18nNegativeBtn,
      _ref$i18nPositiveBtn = _ref.i18nPositiveBtn,
      i18nPositiveBtn = _ref$i18nPositiveBtn === void 0 ? "Yes" : _ref$i18nPositiveBtn,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "mini" : _ref$size,
      _ref$disableClose = _ref.disableClose,
      disableClose = _ref$disableClose === void 0 ? true : _ref$disableClose,
      className = _ref.className,
      buttons = _ref.buttons,
      header = _ref.header,
      children = _ref.children,
      onClick = _ref.onClick,
      props = (0, _objectWithoutPropertiesLoose2["default"])(_ref, _excluded);
  var thisPopup = (0, _react.useRef)();

  var handleClick = function handleClick(button) {
    return function (e) {
      // Locate befor this.popup.close()
      // because need trigger befor onClose
      (e.button = button) && (0, _callFunc["default"])(onClick, [e]);
      thisPopup.current.close();
    };
  };

  var thisHeader = null;

  if (header) {
    thisHeader = /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.Header, {
      children: header
    });
  }

  var thisButtons = buttons;

  if (!(0, _reshowConstant.IS_ARRAY)(thisButtons) || !thisButtons.length) {
    thisButtons = [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.Button, {
      value: false,
      className: "negative",
      children: i18nNegativeBtn
    }, "b-negative"), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.Button, {
      value: true,
      className: "positive",
      children: i18nPositiveBtn
    }, "b-positive")];
  }

  thisButtons = thisButtons.map(function (button) {
    return (0, _reactAtomicMolecule.build)(button)({
      onClick: handleClick(button)
    });
  });
  var classes = (0, _reactAtomicMolecule.mixClass)(className, "dialog", size);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_PopupModal["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    modalClassName: classes,
    name: name,
    content: false,
    ref: thisPopup,
    disableClose: disableClose
  }, props), {}, {
    children: [thisHeader, /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.Content, {
      children: children
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.List, {
      type: "actions",
      children: thisButtons
    })]
  }));
};

Dialog.displayName = defaultName;
var _default = Dialog;
exports["default"] = _default;
module.exports = exports.default;