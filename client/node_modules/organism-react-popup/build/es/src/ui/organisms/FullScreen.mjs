import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
var _excluded = ["appear", "enter", "name", "xico", "scrolling", "page", "children", "className", "style"];
import React, { useState } from "react";
import XIco from "ricon/X";
import get from "get-object-value";
import callfunc from "call-func";
import { mixClass } from "react-atomic-molecule";
import { useMounted } from "reshow-hooks";
import PopupModal from "../molecules/PopupModal.mjs";
import DisplayPopupEl from "../organisms/DisplayPopupEl.mjs";
import { popupDispatch } from "../../stores/popupStore.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var DefaultXIcon = function DefaultXIcon(props) {
  var [hoverStyle, setHoverStyle] = useState();

  var _mounted = useMounted();

  var xIcoEnter = function xIcoEnter() {
    if (_mounted()) {
      setHoverStyle(Styles.xIcoHover);
    }
  };

  var xIcoLeave = function xIcoLeave() {
    if (_mounted()) {
      setHoverStyle(null);
    }
  };

  return /*#__PURE__*/_jsx(XIco, _objectSpread(_objectSpread({}, props), {}, {
    onMouseEnter: xIcoEnter,
    onMouseLeave: xIcoLeave,
    style: _objectSpread(_objectSpread(_objectSpread({}, Styles.x), props.style), hoverStyle),
    size: "75px",
    weight: ".1rem"
  }));
};

var FullScreen = function FullScreen(_ref) {
  var {
    appear = "fadeIn-500",
    enter = "fadeIn-500",
    name = "fullscreen",
    xico = DefaultXIcon,
    scrolling = false,
    page = true,
    children,
    className,
    style
  } = _ref,
      restProps = _objectWithoutProperties(_ref, _excluded);

  var closeEl;
  var thisStyle = style;

  if (page) {
    closeEl = xico;
    thisStyle = _objectSpread(_objectSpread({}, Styles.container), style);

    if (scrolling) {
      thisStyle.display = "block";
    }
  }

  return /*#__PURE__*/_jsx(DisplayPopupEl, {
    children: /*#__PURE__*/_jsx(PopupModal, _objectSpread(_objectSpread({}, restProps), {}, {
      name: name + " (modal)",
      className: mixClass("full-screen", className),
      style: thisStyle,
      modalStyle: Styles.modal,
      modal: children,
      closeEl: closeEl
    }))
  });
};

export default FullScreen;
var Styles = {
  container: {
    background: "#fff",
    textAlign: "left",
    padding: 0
  },
  x: {
    width: "70px",
    height: "75px",
    borderRadius: "8px",
    backgroundColor: "rgba(190,190,190,.39)",
    top: "20px",
    right: "20px",
    opacity: ".3"
  },
  xIcoHover: {
    opacity: ".9"
  }
};