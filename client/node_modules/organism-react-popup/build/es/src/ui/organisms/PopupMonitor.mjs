import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["component", "children", "className", "getIsShow", "popup"];
import React, { useEffect, useState } from "react";
import { mixClass, build, SemanticUI } from "react-atomic-molecule";
import callfunc from "call-func";
import DisplayPopupEl from "../organisms/DisplayPopupEl.mjs";
import PopupOverlay from "../molecules/PopupOverlay.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var PopupMonitor = function PopupMonitor(_ref) {
  var {
    component,
    children,
    className,
    getIsShow,
    popup
  } = _ref,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var [show, setShow] = useState();
  var isShow = callfunc(getIsShow, [otherProps]);
  useEffect(function () {
    if (isShow) {
      setShow(true);
    } else {
      setShow(false);
    }
  }, [isShow]);
  otherProps.className = mixClass(className, "popup-monitor");
  var popupEl = null;

  if (show) {
    popupEl = /*#__PURE__*/_jsx(DisplayPopupEl, {
      children: build(popup, {
        wrap: PopupOverlay,
        doCallFunction: true
      })()
    }, "popup-el");
  }

  var thisChildren = [children, popupEl];
  return build(component || SemanticUI)(otherProps, thisChildren);
};

export default PopupMonitor;