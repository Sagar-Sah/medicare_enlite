"use strict";

exports.__esModule = true;
exports.isUnitlessNumber = void 0;

var _reshowConstant = require("reshow-constant");

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: _reshowConstant.T_TRUE,
  borderImageOutset: _reshowConstant.T_TRUE,
  borderImageSlice: _reshowConstant.T_TRUE,
  borderImageWidth: _reshowConstant.T_TRUE,
  boxFlex: _reshowConstant.T_TRUE,
  boxFlexGroup: _reshowConstant.T_TRUE,
  boxOrdinalGroup: _reshowConstant.T_TRUE,
  columnCount: _reshowConstant.T_TRUE,
  columns: _reshowConstant.T_TRUE,
  flex: _reshowConstant.T_TRUE,
  flexGrow: _reshowConstant.T_TRUE,
  flexPositive: _reshowConstant.T_TRUE,
  flexShrink: _reshowConstant.T_TRUE,
  flexNegative: _reshowConstant.T_TRUE,
  flexOrder: _reshowConstant.T_TRUE,
  gridArea: _reshowConstant.T_TRUE,
  gridRow: _reshowConstant.T_TRUE,
  gridRowEnd: _reshowConstant.T_TRUE,
  gridRowSpan: _reshowConstant.T_TRUE,
  gridRowStart: _reshowConstant.T_TRUE,
  gridColumn: _reshowConstant.T_TRUE,
  gridColumnEnd: _reshowConstant.T_TRUE,
  gridColumnSpan: _reshowConstant.T_TRUE,
  gridColumnStart: _reshowConstant.T_TRUE,
  fontWeight: _reshowConstant.T_TRUE,
  lineClamp: _reshowConstant.T_TRUE,
  lineHeight: _reshowConstant.T_TRUE,
  opacity: _reshowConstant.T_TRUE,
  order: _reshowConstant.T_TRUE,
  orphans: _reshowConstant.T_TRUE,
  tabSize: _reshowConstant.T_TRUE,
  widows: _reshowConstant.T_TRUE,
  zIndex: _reshowConstant.T_TRUE,
  zoom: _reshowConstant.T_TRUE,
  // SVG-related properties
  fillOpacity: _reshowConstant.T_TRUE,
  floodOpacity: _reshowConstant.T_TRUE,
  stopOpacity: _reshowConstant.T_TRUE,
  strokeDasharray: _reshowConstant.T_TRUE,
  strokeDashoffset: _reshowConstant.T_TRUE,
  strokeMiterlimit: _reshowConstant.T_TRUE,
  strokeOpacity: _reshowConstant.T_TRUE,
  strokeWidth: _reshowConstant.T_TRUE
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

exports.isUnitlessNumber = isUnitlessNumber;

var prefixKey = function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
};
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ["Webkit", "ms", "Moz", "O"]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

(0, _reshowConstant.KEYS)(isUnitlessNumber).forEach(function (prop) {
  return prefixes.forEach(function (prefix) {
    return isUnitlessNumber[prefixKey(prefix, prop)] = _reshowConstant.T_TRUE;
  });
});