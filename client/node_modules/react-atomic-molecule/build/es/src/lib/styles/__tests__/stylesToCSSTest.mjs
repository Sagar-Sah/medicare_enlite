import { expect } from "chai";
import stylesToCSS from "../stylesToCSS.mjs";
import reactStyle from "../index.mjs";
import store from "../store.mjs";
import { min } from "../../../config/styles/rwd.mjs";
describe("Test stylesToCSS", function () {
  beforeEach(function () {
    store.counter = 0;
  });
  it("basic test", function () {
    var acture = stylesToCSS();
    expect(acture).to.deep.equal({
      styleIds: [],
      objArr: {},
      cssArr: {}
    });
  });
  it("join selector test", function () {
    var oReactStyle = reactStyle({
      width: 100
    }, [min.md, [".xxx", ".yyy"]]);
    var acture = stylesToCSS([oReactStyle]);
    expect(JSON.stringify(acture.cssArr)).to.have.string(".xxx,.yyy");
  });
  it("style only test", function () {
    var oReactStyle = reactStyle({
      width: 100
    });
    var acture = stylesToCSS([oReactStyle]);
    expect(JSON.stringify(acture.cssArr)).to.have.string(".c0_,.c0_.c0_1,");
  });
  it("test keyframe", function () {
    var oReactStyle = reactStyle([{
      transform: ["rotateZ(0deg)"]
    }, {
      transform: ["rotateZ(360deg)"]
    }], ["@keyframes spin", "0%", "100%"]);
    var acture = stylesToCSS([oReactStyle]);
    expect(JSON.stringify(acture.cssArr)).to.have.string("@keyframes spin");
  });
});