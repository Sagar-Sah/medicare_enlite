import { hasWin } from "win-doc";
import { inject, create } from "create-el";
import query from "css-query-selector";
import { KEYS } from "reshow-constant";
import store from "./store.mjs";
import stylesToCSS from "./stylesToCSS.mjs";
import getStyleTagId from "./getStyleTagId.mjs";

var appendCss = function appendCss(_ref) {
  var {
    styleIds,
    objArr,
    cssArr
  } = _ref;
  styleIds.forEach(function (key) {
    store.registry[key] = objArr[key];
    var id = getStyleTagId(key);
    var css = cssArr[key];

    if (!hasWin()) {
      console.log("<style id=\"" + id + "\">" + css + "</style>");
      return;
    }

    var styleDom = query.one("#" + id);

    if (styleDom) {
      styleDom.innerHTML = css;
    } else {
      styleDom = create("style")()({
        id,
        innerHTML: css
      });
      inject(function () {
        return query.one("head");
      })(styleDom);
    }
  });
};

var injectStyle = function injectStyle(styles) {
  if (styles) {
    KEYS(styles).forEach(function (key) {
      return store.newStyles.push(styles[key]);
    });
  }

  if (!store.newStyles.length) {
    // In Node (Server Side)  or Styles are already injected
    return null;
  }

  var compiled = stylesToCSS(store.newStyles);
  store.newStyles = [];

  if (compiled.styleIds.length) {
    appendCss(compiled);
  }
};

export default injectStyle;