import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["component", "loading", "src", "imgProps", "prepend"];
import { mixClass } from "class-lib";
import build from "reshow-build";
import SemanticUI from "../molecules/SemanticUI.mjs";
import useCSS from "../../useCSS.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Image = function Image(props) {
  useCSS(["image"], "semantic");

  var {
    component = SemanticUI,
    loading = "lazy",
    src,
    imgProps,
    prepend
  } = props,
      restProps = _objectWithoutProperties(props, _excluded);

  var classes = mixClass(props.className, {
    image: props.ui
  });
  var thisAlt = props.alt || props.title;

  var thisImgProps = _objectSpread(_objectSpread({}, imgProps), {}, {
    atom: "img",
    alt: thisAlt,
    key: src,
    src,
    loading
  });

  if (props.atom && "img" !== props.atom) {
    return build(component)(_objectSpread(_objectSpread({}, restProps), {}, {
      className: classes
    }), /*#__PURE__*/_jsxs(_Fragment, {
      children: [prepend, /*#__PURE__*/_jsx(SemanticUI, _objectSpread({}, thisImgProps)), props.children]
    }));
  } else {
    return build(component)(_objectSpread(_objectSpread(_objectSpread({}, restProps), thisImgProps), {}, {
      className: classes
    }));
  }
};

export default Image;