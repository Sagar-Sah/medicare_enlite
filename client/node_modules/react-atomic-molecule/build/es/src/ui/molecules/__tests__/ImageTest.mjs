var _Image, _Image2, _Image3, _Image4, _Image5;

import { expect } from "chai";
import { render } from "reshow-unit";
import Image from "../Image.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("Test Image", function () {
  it("basic test", function () {
    var wrapper = render(_Image || (_Image = /*#__PURE__*/_jsx(Image, {})));
    expect(wrapper.html()).to.have.string("loading=\"lazy\"");
  });
  it("img embedded in div", function () {
    var wrapper = render(_Image2 || (_Image2 = /*#__PURE__*/_jsx(Image, {
      atom: "div"
    })));
    expect(wrapper.html()).to.have.string("loading=\"lazy\"");
  });
  it("unset loading", function () {
    var wrapper = render(_Image3 || (_Image3 = /*#__PURE__*/_jsx(Image, {
      loading: null
    })));
    expect(wrapper.html()).to.not.have.string("loading=\"lazy\"");
  });
  it("img embedded in div not set loading", function () {
    var wrapper = render(_Image4 || (_Image4 = /*#__PURE__*/_jsx(Image, {
      atom: "div",
      loading: null
    })));
    expect(wrapper.html()).to.not.have.string("loading=\"lazy\"");
  });
  it("test multi children", function () {
    var wrapper = render(_Image5 || (_Image5 = /*#__PURE__*/_jsx(Image, {
      atom: "picture",
      prepend: /*#__PURE__*/_jsx("source", {
        media: "(min-width:650px)",
        srcSet: "foo1.jpg"
      }),
      src: "foo2.jpg",
      children: /*#__PURE__*/_jsx("source", {
        media: "(min-width:465px)",
        srcSet: "foo3.jpg"
      })
    })));
    expect(wrapper.html()).to.equal("<picture class=\"ui\"><source media=\"(min-width:650px)\" srcset=\"foo1.jpg\"><img src=\"foo2.jpg\" loading=\"lazy\" class=\"ui\"><source media=\"(min-width:465px)\" srcset=\"foo3.jpg\"></picture>");
  });
});