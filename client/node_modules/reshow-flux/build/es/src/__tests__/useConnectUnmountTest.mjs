import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _assertThisInitialized from "reshow-runtime/es/helpers/assertThisInitialized";
import _inherits from "reshow-runtime/es/helpers/inherits";
import _createSuper from "reshow-runtime/es/helpers/createSuper";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
import _asyncToGenerator from "reshow-runtime/es/helpers/asyncToGenerator";
import React, { PureComponent } from "react";
import { expect } from "chai";
import { render, act } from "reshow-unit";
import sinon from "sinon";
import { createReducer } from "reshow-flux-base";
import useConnect from "../useConnect.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("useConnect Unmount Test", function () {
  var sandbox = sinon.createSandbox();
  var reducer;
  beforeEach(function () {
    reducer = createReducer(function (state, action) {
      return action;
    }, {});
  });
  afterEach(function () {
    sandbox.restore();
  });
  it("basic test", /*#__PURE__*/_asyncToGenerator(function* () {
    var _Foo;

    var [store, dispatch] = reducer;

    var Foo = function Foo(props) {
      var state = useConnect({
        storeLocator: function storeLocator() {
          return store;
        },
        calculateState: function calculateState(prevState, props) {
          return store.getState();
        }
      })(props);
      return /*#__PURE__*/_jsx("div", {
        className: state.foo
      });
    };

    var oFake = {};

    var FakeComponent = /*#__PURE__*/function (_PureComponent) {
      _inherits(FakeComponent, _PureComponent);

      var _super = _createSuper(FakeComponent);

      function FakeComponent(props) {
        var _this;

        _classCallCheck(this, FakeComponent);

        _this = _super.call(this, props);

        _defineProperty(_assertThisInitialized(_this), "state", {
          show: true
        });

        oFake.set = function (k, v) {
          _this.setState({
            [k]: v
          });
        };

        return _this;
      }

      _createClass(FakeComponent, [{
        key: "render",
        value: function render() {
          if (this.state.show) {
            return _Foo || (_Foo = /*#__PURE__*/_jsx(Foo, {}));
          } else {
            return null;
          }
        }
      }]);

      return FakeComponent;
    }(PureComponent);

    var wrap = render( /*#__PURE__*/_jsx(FakeComponent, {}));
    sandbox.spy(store, "removeListener");
    console.log("before unmount", store.removeListener.callCount);
    expect(store.removeListener.callCount).to.equal(0);
    yield act(function () {
      return oFake.set("show", false);
    });
    expect(store.removeListener.callCount).to.equal(1);
    console.log("after unmount", store.removeListener.callCount);
    dispatch({});
  }));
});