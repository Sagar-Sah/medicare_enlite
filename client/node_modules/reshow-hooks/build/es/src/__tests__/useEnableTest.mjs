import { useEffect, useRef } from "react";
import { expect } from "chai";
import { render, cleanIt, waitFor, getSinon } from "reshow-unit";
import useEnable from "../useEnable.mjs";
import { jsx as _jsx } from "react/jsx-runtime";
describe("test useEnable", function () {
  afterEach(function () {
    cleanIt();
  });
  it("basic test", function () {
    var foo1;
    var foo2;

    var Comp = function Comp() {
      var [bOn, setOn] = useEnable(1, 0);
      var initSwitch = useRef(bOn);
      foo1 = initSwitch.current;
      useEffect(function () {
        setOn();
      }, []);
      foo2 = bOn;
      return null;
    };

    render( /*#__PURE__*/_jsx(Comp, {}));
    expect(foo1).to.equal(0);
    expect(foo2).to.equal(1);
  });
});