import { useState, useRef } from "react";
import callfunc from "call-func";

var useSyncState = function useSyncState(initState, setter) {
  if (setter === void 0) {
    setter = useState;
  }

  var lastState = useRef();
  var [state, setState] = setter(function () {
    lastState.current = callfunc(initState);
    return lastState.current;
  });

  var setSyncState = function setSyncState(nextState) {
    var change = callfunc(nextState, [lastState.current]);

    if (lastState.current !== change) {
      lastState.current = setState(change) || change;
    }
  };

  return [state, setSyncState, function () {
    return lastState.current;
  }];
};

export default useSyncState;