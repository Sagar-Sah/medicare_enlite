import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
var _excluded = ["children", "backfillProps"];
import { useConnect as useConn } from "reshow-flux";
import MemoReturn from "../organisms/MemoReturn.mjs";
import connectOptions from "../../connectOptions.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var getReturn = function getReturn(_temp) {
  var {
    displayName = "Return",
    useConnect,
    cleanProps,
    options
  } = _temp === void 0 ? {} : _temp;
  useConnect = useConnect || useConn(_objectSpread(_objectSpread({}, connectOptions), options));

  var Return = function Return(props) {
    var {
      children,
      backfillProps
    } = props,
        otherProps = _objectWithoutProperties(props, _excluded);

    var state = useConnect(props);
    var nextProps = backfillProps ? _objectSpread(_objectSpread({}, state), connectOptions.reset(otherProps, cleanProps)) : _objectSpread(_objectSpread({}, connectOptions.reset(otherProps, cleanProps)), state);
    return /*#__PURE__*/_jsx(MemoReturn, {
      props: nextProps,
      children: children
    });
  };

  Return.displayName = displayName;
  return Return;
};

var Return = getReturn();
export default Return;
export { getReturn };