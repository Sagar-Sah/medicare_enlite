import { useState, useMemo } from "react";
import { useReduceStore, Map } from "reshow-flux";
import build from "reshow-build";
import callfunc from "call-func";
import Return from "./ui/organisms/Return.mjs";

var usePartialRender = function usePartialRender(initRenderKeys, initChildren) {
  var [renderStore, setPartialRender] = useReduceStore(null, function () {
    return Map(callfunc(initChildren));
  });
  var [renderKeys, setRenderKeys] = useState(function () {
    return callfunc(initRenderKeys);
  });
  var renderItems = useMemo(function () {
    var buildReturn = build(build(Return)({
      store: renderStore
    }));
    /**
     * renderKeys could use array like data structure.
     * such as immutable.js
     */

    return (renderKeys && renderKeys.map ? renderKeys : []).map(function (name) {
      return buildReturn({
        key: name,
        name,
        initStates: [name]
      }, function (props) {
        return props[props.name] || null;
      });
    });
  }, [renderKeys]);
  return [renderItems, setPartialRender, setRenderKeys];
};

export default usePartialRender;