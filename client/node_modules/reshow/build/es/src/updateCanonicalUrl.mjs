import { sessionStorage as sStore } from "get-storage";
import { doc, win } from "win-doc";
import get from "get-object-value";

var getDocCanonicalUrl = function getDocCanonicalUrl(oDoc) {
  oDoc = oDoc || doc();
  var canonical = oDoc.querySelector('link[rel="canonical"]');
  return canonical ? canonical.href : false;
};

var initCanonicalUrl = function initCanonicalUrl(props) {
  var canonicalUrl = getDocCanonicalUrl();

  if (-1 !== doc().URL.indexOf("--disableCanonical")) {
    sStore("disableCanonical")(1);
  } else if (canonicalUrl) {
    updateCanonicalUrl(canonicalUrl, props);
  }
};

var updateCanonicalUrl = function updateCanonicalUrl(url, props) {
  var loc = doc().location;

  if (!loc || get(props, ["disableCanonical"], function () {
    return sStore("disableCanonical")();
  })) {
    return;
  }

  url = url || getDocCanonicalUrl();

  if (!url) {
    return;
  }

  var newUrl = function newUrl(url) {
    return url + loc.search + loc.hash;
  };

  if (-1 !== url.indexOf(loc.hostname)) {
    if (0 !== url.indexOf(loc.protocol)) {
      var urlArr = url.split(":");
      url = loc.protocol + urlArr[1];
    }

    var history = win().history || {};
    history.replaceState && history.replaceState("", "", newUrl(url));
  } else {
    loc.replace(newUrl(url));
  }
};

export default updateCanonicalUrl;
export { initCanonicalUrl, getDocCanonicalUrl };