import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["open", "content", "label"];
import useLazyInject from "./useLazyInject.mjs";
import SemanticUI from "./SemanticUI.mjs";
/**
    const pinOpenBackground = "#c4c1cd";
    let thisHeader = null;
    if (header) {
      thisHeader = <Header style={{marginLeft: 20}}>{header}</Header>;
    }
    pinContent = (
      <Card
        style={{
          background: pinOpenBackground,
        }}
      >
        <Content>
          {thisHeader}
          {children}
        </Content>
      </Card>
    );
 */

import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Pin = function Pin(_ref) {
  var {
    open = null,
    content = null,
    label = null
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  injects = useLazyInject(InjectStyles, injects);
  var pinStyles = [injects.pin];
  var pinContent = null;

  if (open) {
    pinStyles = [injects.pin, injects.pinOpen];
    pinContent = content;
  }

  var thisLabel = label ? /*#__PURE__*/_jsx(SemanticUI, {
    styles: injects.label,
    children: label
  }) : /*#__PURE__*/_jsx(SemanticUI, {
    style: Styles.point
  });
  return /*#__PURE__*/_jsxs(SemanticUI, _objectSpread(_objectSpread({
    style: Styles.container
  }, props), {}, {
    children: [/*#__PURE__*/_jsx(SemanticUI, {
      styles: pinStyles,
      children: pinContent
    }), thisLabel]
  }));
};

export default Pin;
var Styles = {
  container: {
    position: "relative",
    display: "inline-block"
  },
  point: {
    width: "14px",
    height: "14px",
    margin: "8px 0 0 8px",
    background: "#2f2f2f",
    position: "absolute",
    top: 0,
    borderRadius: "50%"
  }
};
var injects;
var InjectStyles = {
  label: [{
    position: "absolute",
    top: "50%",
    left: "50%",
    transform: ["translate(-50%, -50%)"]
  }],
  pin: [{
    width: "30px",
    height: "30px",
    borderRadius: ["50% 50% 50% 0"],
    background: "#89849b",
    transform: ["rotate(-45deg)"],
    transition: ["all 0.25s ease-in-out"]
  }],
  pinOpen: [{
    width: "250px",
    height: "auto",
    borderRadius: ["5px"],
    transform: ["rotate(0)"]
  }]
};