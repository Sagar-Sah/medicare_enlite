import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["position", "weight", "size", "color", "className", "style"];
import SemanticUI from "./SemanticUI.mjs";
import useLazyInject from "./useLazyInject.mjs";
import mixClass from "./mixClass.mjs";
import { jsx as _jsx } from "react/jsx-runtime";

var ICON_X = function ICON_X(_ref) {
  var {
    position = "absolute",
    weight = ".2rem",
    size = "1rem",
    color = "#333",
    className = null,
    style = null
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  injects = useLazyInject(InjectStyles, injects);
  var classes = mixClass(className, "icon", "x");
  var lineStyle = {
    width: weight,
    height: size,
    background: color
  };
  var containerStyle = Styles.container;

  if ("absolute" === position) {
    containerStyle = _objectSpread(_objectSpread({}, containerStyle), Styles.absolute);
  }

  return /*#__PURE__*/_jsx(SemanticUI, _objectSpread(_objectSpread({}, props), {}, {
    className: classes,
    style: _objectSpread(_objectSpread({
      width: size,
      height: size
    }, containerStyle), style),
    children: /*#__PURE__*/_jsx(SemanticUI, {
      styles: injects.line,
      style: lineStyle,
      children: /*#__PURE__*/_jsx(SemanticUI, {
        styles: injects.line2,
        style: lineStyle
      })
    })
  }));
};

export default ICON_X;
var Styles = {
  container: {
    background: "transparent",
    position: "relative",
    cursor: "pointer"
  },
  absolute: {
    position: "absolute",
    top: 5,
    right: 5
  }
};
var injects;
var InjectStyles = {
  line: [{
    position: "absolute",
    left: "50%",
    top: "50%",
    transform: ["translate(-50%,-50%) rotate(45deg)"]
  }],
  line2: [{
    transform: ["rotate(90deg)"]
  }]
};