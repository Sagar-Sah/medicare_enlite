import { expect } from "chai";
import gjsdom from "jsdom-global";
import { getUrl } from "../index.mjs";
describe("test get url", function () {
  var reset;
  afterEach(function () {
    reset();
  });
  it("basic test", function () {
    reset = gjsdom(null, {
      url: "http://xxx?abc=def"
    });
    expect(getUrl("abc")).to.equal("def");
  });
  it("test get undefined", function () {
    reset = gjsdom(null, {
      url: "http://xxx?abc=def"
    });
    expect(getUrl()).to.be.undefined;
  });
  it("test get empty string with &", function () {
    reset = gjsdom(null, {
      url: "http://xxx?foo=&"
    });
    expect(getUrl("foo")).to.equal("");
  });
  it("test get empty string without &", function () {
    reset = gjsdom(null, {
      url: "http://xxx?foo="
    });
    expect(getUrl("foo")).to.equal("");
  });
  it("test get null", function () {
    reset = gjsdom(null, {
      url: "http://xxx?foo"
    });
    expect(getUrl("foo")).to.be.undefined;
    expect(getUrl("bar")).to.be.undefined;
  });
  it("test get without query", function () {
    reset = gjsdom(null, {
      url: "http://xxx"
    });
    expect(getUrl("foo")).to.be.undefined;
    expect(getUrl("bar")).to.be.undefined;
  });
  it("test get multi", function () {
    reset = gjsdom(null, {
      url: "http://xxx?foo=1&foo=2"
    });
    var actual = getUrl("foo");
    expect(actual).to.deep.equal(["1", "2"]);
  });
  it("test get multi with similar key", function () {
    reset = gjsdom(null, {
      url: "http://xxx?type=1&email_type=2"
    });
    var actual = getUrl("type");
    expect(actual).to.equal("1");
  });
  it("test get multi with similar key and zero match", function () {
    reset = gjsdom(null, {
      url: "http://xxx?xxx_type=1&email_type=2"
    });
    var actual = getUrl("type");
    expect(actual).to.be.undefined;
  });
  it("test get multi with similar key and value equal empty string", function () {
    reset = gjsdom(null, {
      url: "http://xxx?xxx_type=1&email_type=2&type="
    });
    var actual = getUrl("type");
    expect(actual).to.equal("");
  });
  it("test get multi with similar key and value equal empty string with ampersand", function () {
    reset = gjsdom(null, {
      url: "http://xxx?xxx_type=1&email_type=2&type=&"
    });
    var actual = getUrl("type");
    expect(actual).to.equal("");
  });
  it("test get multi with similar key and value equal zero", function () {
    reset = gjsdom(null, {
      url: "http://xxx?xxx_type=1&email_type=2&type=0"
    });
    var actual = getUrl("type");
    expect(actual).to.equal("0");
  });
  it("test get multi different keys", function () {
    reset = gjsdom(null, {
      url: "http://xxx?foo=aaa&bar=bbb"
    });
    var actual = getUrl(["foo", "bar"]);
    expect(actual).to.deep.equal({
      foo: "aaa",
      bar: "bbb"
    });
  });
});