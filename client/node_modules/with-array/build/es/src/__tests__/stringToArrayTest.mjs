import { expect } from "chai";
import { stringToArray, oneItemArrayToString } from "../index.mjs";
describe("Test stringToArray", function () {
  it("test to array", function () {
    var vals = [0, 1, "0", "1", null, undefined, ""];
    var to = [[0], [1], ["0"], ["1"], [null], [], [""]];
    vals.forEach(function (v, index) {
      expect(stringToArray(vals[index])).to.deep.equal(to[index]);
    });
  });
  it("test will keep same", function () {
    var vals = [{}, []];
    vals.forEach(function (v, index) {
      expect(stringToArray(vals[index])).to.deep.equal(vals[index]);
    });
  });
  it("test null", function () {
    var val = null;
    var valToArray = stringToArray(val);
    var valToString = oneItemArrayToString(valToArray);
    expect([valToArray, valToString]).to.deep.equal([[null], null]);
  });
  it("test undefined", function () {
    var val = undefined;
    var valToArray = stringToArray(val);
    var valToString = oneItemArrayToString(valToArray);
    expect([valToArray, valToString]).to.deep.equal([[], undefined]);
  });
  it("test not defined", function () {
    var val;
    var valToArray = stringToArray(val);
    var valToString = oneItemArrayToString(valToArray);
    expect([valToArray, valToString]).to.deep.equal([[], undefined]);
  });
  it("test not assign valToArray", function () {
    var valToArray = stringToArray();
    var valToString = oneItemArrayToString(valToArray);
    expect([valToArray, valToString]).to.deep.equal([[], undefined]);
  });
  it("test not assign both", function () {
    var valToArray = stringToArray();
    var valToString = oneItemArrayToString(valToArray);
    expect([valToArray, valToString]).to.deep.equal([[], undefined]);
  });
});